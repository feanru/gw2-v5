export function compact(t){return t.filter(Boolean)}export function omit(t,e){const n={};for(const i in t)e.includes(i)||(n[i]=t[i]);return n}export function toMap(t,e,n){const i={};return t.forEach(t=>{void 0!==t[e]&&null!==t[e]&&(i[t[e]]=n?t[n]:t)}),i}function transformRecipe(t){const e=t.ingredients.map(t=>({id:t.id,type:t.type,quantity:t.count}));return{id:t.output_item_id,type:"Recipe",nested:!1,quantity:1,output:t.output_item_count,components:e,prerequisites:t.id?[{type:"Recipe",id:t.id}]:[],min_rating:void 0!==t.min_rating?t.min_rating:null,disciplines:t.disciplines||[],upgrade_id:t.output_upgrade_id,output_range:t.output_item_count_range,achievement_id:t.achievement_id,merchant:t.merchant,multipleRecipeCount:t.multipleRecipeCount,daily_purchase_cap:t.daily_purchase_cap?t.daily_purchase_cap:0,weekly_purchase_cap:t.weekly_purchase_cap?t.weekly_purchase_cap:0}}function nestRecipe(t,e,n,i){if(t.nested)return t;t.nested=!0,t.quantity=t.quantity||1;const c=(t.components||[]).map(c=>{const p="GuildUpgrade"===c.type,o=p&&n[c.id]||c.id,u=e[o],r=[91224,91137,91222,91171];if("Currency"===c.type)return c;if(!u){if(!p)return c;const t=i[c.id];return!!t&&{id:t,type:"Item",quantity:c.quantity}}return t.id===o?p?{id:o,type:"Item",quantity:c.quantity}:c:r.includes(t.id)&&r.includes(o)?c:(u.nested||(e[o]=nestRecipe(u,e,n,i)),{...omit(u,["nested"]),quantity:c.quantity})});return t.components=compact(c),t.components&&0===t.components.length&&(t.components=void 0),t}export function nestRecipes(t,e={}){const n=t.map(transformRecipe),i=toMap(n,"id"),c=toMap(n,"upgrade_id","id");for(const t in i){const n=i[t];n&&(i[t]=nestRecipe(n,i,c,e))}return compact(Object.values(i)).map(t=>omit(t,["nested"])).filter(t=>t.components)}