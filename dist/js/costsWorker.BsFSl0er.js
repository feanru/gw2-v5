import{CraftIngredient as t}from"./items-core.DMXEDbc5.min.js";import"./utils-BH_A_QOU.js";import"./services-BkFipzNj.js";const e="undefined"!=typeof self?self:globalThis;function r(t){return Array.isArray(t)?t.map(t=>a(t,null)):[]}function a(e,r){const l=new t(e);return Object.assign(l,e),"number"==typeof e._uid&&(l._uid=e._uid,t.nextUid<=e._uid&&(t.nextUid=e._uid+1)),l._parent=r||null,l.children=Array.isArray(e.children)?e.children.map(t=>a(t,l)):[],l}function l(t,e){t&&t.forEach(t=>{t.recalc(e,null)})}function n(t){let e=0,r=0,a=0;for(const l of t)switch(e+=l.total_buy||0,r+=l.total_sell||0,l.modeForParentCrafted){case"sell":a+=l.total_sell||0;break;case"crafted":a+=l.total_crafted||0;break;default:a+=l.total_buy||0}return{totalBuy:e,totalSell:r,totalCrafted:a}}e.onmessage=t=>{const{ingredientTree:a,globalQty:o}=t.data||{},s=r(a);l(s,o);const i=n(s);e.postMessage({updatedTree:s,totals:i})};export{n as getTotals,r as rebuildTreeArray,l as recalcAll};
