import{getCached as t,setCached as e}from"./utils/cache.min.js";import{fetchWithCache as o}from"./utils/requestCache.min.js";import"./utils/cachePolicies.min.js";import"./utils/cacheSync.min.js";function r(){return{ventasComprasChartCtx:document.getElementById("ventas-compras-chart")?.getContext("2d"),horaPuntaDiv:document.getElementById("hora-punta"),promedioHoraDiv:document.getElementById("promedio-hora"),promedioDiaDiv:document.getElementById("promedio-dia")}}let a=null,n=null;async function i(r){const a=`history_${r}`,n=t(a,!0),i={};n?.etag&&(i["If-None-Match"]=n.etag),n?.lastModified&&(i["If-Modified-Since"]=n.lastModified);try{const t=`https://api.datawars2.ie/gw2/v2/history/hourly/json?itemID=${r}`,s=await o(t,{headers:i},a,n);if(304===s.status&&n)return n.value;if(!s.ok)throw new Error(`Error al obtener histórico horario: ${s.statusText}`);const d=await s.json(),l=s.headers.get("ETag"),c=s.headers.get("Last-Modified");return e(a,d,void 0,{etag:l,lastModified:c}),d}catch(t){throw console.error("Error al obtener histórico horario",t),new Error(`Error al obtener histórico horario: ${t.message}`)}}async function s(r){const a=`price_${r}`,n=t(a,!0),i={};n?.etag&&(i["If-None-Match"]=n.etag),n?.lastModified&&(i["If-Modified-Since"]=n.lastModified);try{const t=`https://api.datawars2.ie/gw2/v1/items/json?fields=${"buy_price,sell_price,buy_quantity,sell_quantity,last_updated"}&ids=${r}`,s=await o(t,{headers:i},a,n);if(304===s.status&&n)return n.value;if(!s.ok)throw new Error(`Error al obtener estado actual: ${s.statusText}`);const d=await s.json(),l=Array.isArray(d)?d[0]||{}:d||{},c=s.headers.get("ETag"),u=s.headers.get("Last-Modified");return e(a,l,void 0,{etag:c,lastModified:u}),l}catch(t){throw console.error("Error al obtener estado actual",t),new Error(`Error al obtener estado actual: ${t.message}`)}}window.cargarMejoresHorasYMercado=async function(t){!function(){const t=r();t.horaPuntaDiv.innerHTML="",t.promedioHoraDiv.innerHTML="",t.promedioDiaDiv.innerHTML="",a&&(a.destroy(),a=null)}(),await async function(t){try{const e=await i(t);await s(t);!function(t){const{ventasComprasChartCtx:e}=r();if(!e)return;if(!t||0===t.length){const t=document.getElementById("mejores-table");return void(t&&t.remove())}n||(n=new Worker(new URL("./workers/ventasComprasWorker.js",import.meta.url),{type:"module"}));n.onmessage=o=>{const r=o.data||{};if(r.empty){const t=document.getElementById("mejores-table");return void(t&&t.remove())}const{etiquetas:n,ventas:i,compras:s,horaMin:d,horaMax:l,totalHoras:c}=r;let u=document.getElementById("resumen-horas");if(!u){u=document.createElement("div"),u.id="resumen-horas",u.className="info-box";const t=e.canvas.closest(".card");t&&t.insertBefore(u,t.firstChild)}function m(t){let e=t?new Date(t):null;return e&&!isNaN(e)?`${e.getFullYear()}-${(e.getMonth()+1).toString().padStart(2,"0")}-${e.getDate().toString().padStart(2,"0")} ${e.getHours().toString().padStart(2,"0")}:00`:t}const h=`<strong>Historial:</strong> ${m(d)} &rarr; ${m(l)} &nbsp; | &nbsp; <strong>Total de horas:</strong> ${c}`,p=[()=>{u.innerHTML=h}];a&&p.push(()=>a.destroy()),p.push(()=>{a=new Chart(e,{type:"line",data:{labels:n,datasets:[{label:"Vendidos por hora",data:i,backgroundColor:"rgba(54, 162, 235, 0.3)",borderColor:"rgb(54, 235, 235)",borderWidth:2,pointRadius:2,tension:.2},{label:"Comprados por hora",data:s,backgroundColor:"rgba(255, 206, 86, 0.3)",borderColor:"rgb(255, 168, 86)",borderWidth:2,pointRadius:2,tension:.2}]},options:{responsive:!0,plugins:{legend:{position:"top"},title:{display:!1}}}})}),p.push(()=>{let o=document.getElementById("mejores-table");o&&o.remove();const r=document.createElement("table");r.className="table-modern",r.id="mejores-table",r.innerHTML=`\n              <thead>\n                <tr>\n                  <th><div class="dato-item">Fecha/Hora</div></th>\n                  <th><div class="dato-item">Vendidos</div></th>\n                  <th><div class="dato-item">Comprados</div></th>\n                  <th><div class="dato-item">Precio venta avg</div></th>\n                  <th><div class="dato-item">Precio compra avg</div></th>\n                </tr>\n              </thead>\n              <tbody>\n                ${t.slice(-24).reverse().map(t=>{let e=t.date||"",o=e?new Date(e):null;return`<tr>\n                      <td><div class="dato-item-info">${o&&!isNaN(o)?`${o.getFullYear()}-${(o.getMonth()+1).toString().padStart(2,"0")}-${o.getDate().toString().padStart(2,"0")} ${o.getHours().toString().padStart(2,"0")}:00`:e}</div></td>\n                      <td><div class="dato-item-info">${t.sell_sold??""}</div></td>\n                      <td><div class="dato-item-info">${t.buy_sold??""}</div></td>\n                      <td><div class="dato-item-info">${null!=t.sell_price_avg?formatGoldColored(t.sell_price_avg):""}</div></td>\n                      <td><div class="dato-item-info">${null!=t.buy_price_avg?formatGoldColored(t.buy_price_avg):""}</div></td>\n                    </tr>`}).join("")}\n              </tbody>\n            `;const a=e.canvas.closest(".card");a&&a.appendChild(r)}),function(t){requestIdleCallback(function e(o){for(;o.timeRemaining()>0&&t.length;){const e=t.shift();"function"==typeof e&&e()}t.length&&requestIdleCallback(e)})}(p)},n.postMessage({history:t})}(e),function(t){const{horaPuntaDiv:e}=r();if(!e)return;if(e.innerHTML="",!t||0===t.length)return;let o=-1/0,a=null;if(t.forEach(t=>{const e=(t.sell_sold||0)+(t.buy_sold||0);e>o&&(o=e,a=t)}),a){let t=a.date||"",o=t?new Date(t):null;if(o&&!isNaN(o)){t=`${o.getFullYear()}-${(o.getMonth()+1).toString().padStart(2,"0")}-${o.getDate().toString().padStart(2,"0")} ${o.getHours().toString().padStart(2,"0")}:00`}e.innerHTML=`<b>Hora punta:</b> ${t} &nbsp;|&nbsp; Vendidos: ${a.sell_sold??"-"} &nbsp;|&nbsp; Comprados: ${a.buy_sold??"-"}`}}(e),function(t){const{promedioHoraDiv:e,promedioDiaDiv:o}=r();if(!e||!o)return;if(e.innerHTML="",o.innerHTML="",!t||0===t.length)return;let a=0,n=0;const i={};t.forEach(t=>{const e=t.sell_sold||0,o=t.buy_sold||0;a+=e,n+=o;let r=t.date?new Date(t.date):null;if(r&&!isNaN(r)){const t=r.toISOString().split("T")[0];i[t]||(i[t]={s:0,b:0}),i[t].s+=e,i[t].b+=o}});const s=t.length||1,d=Object.keys(i).length||1,l=a/s,c=n/s,u=a/d,m=n/d;e.innerHTML=`<div class="dato-item">Promedio por hora</div><div class="dato-item-info">Vendidos: ${l.toFixed(1)} | Comprados: ${c.toFixed(1)}</div>`,o.innerHTML=`<div class="dato-item">Promedio por día</div><div class="dato-item-info">Vendidos: ${u.toFixed(1)} | Comprados: ${m.toFixed(1)}</div>`}(e)}catch(t){console.error("Error al cargar datos del ítem",t)}}(t)};export{s as obtenerEstadoActual,i as obtenerHistorialHorario};
