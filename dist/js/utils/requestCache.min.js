import{getCached as e}from"./cache.min.js";import"./cachePolicies.min.js";import"./cacheSync.min.js";const t=new Map;function n(e){return t.get(e)}function i(e,n){return t.set(e,n),n.finally(()=>t.delete(e)),n}function s(t,s={},a=null,c=null){const o=n(t);if(o)return o.then(e=>e.clone());a&&!c&&(c=e(a,!0));const r={...s.headers||{}};c?.etag&&(r["If-None-Match"]=c.etag),c?.lastModified&&(r["If-Modified-Since"]=c.lastModified);return i(t,fetch(t,{...s,headers:r}).then(async e=>304===e.status&&c?new Response(JSON.stringify(c.value),{status:200,headers:{"X-Cache":"HIT",ETag:c.etag||"","Last-Modified":c.lastModified||""}}):e)).then(e=>e.clone())}var a={fetchWithCache:s,getRequest:n,setRequest:i};export{a as default,s as fetchWithCache,n as getRequest,i as setRequest};
