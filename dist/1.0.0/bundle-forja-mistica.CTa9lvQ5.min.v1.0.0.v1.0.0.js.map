{"version":3,"file":"bundle-forja-mistica.CTa9lvQ5.min.js","sources":["../../src/js/bundle-forja-mistica.js"],"sourcesContent":["import fetchWithRetry from './utils/fetchWithRetry.js';\n// Bundled forja mistica scripts\n// Utilidades compartidas para fractales y forja mística\nconst iconCache = {};\nconst rarityCache = {};\n\nasync function fetchIconsFor(ids = []) {\n  if (!ids.length) return;\n  try {\n    const res = await fetchWithRetry(`https://api.guildwars2.com/v2/items?ids=${ids.join(',')}&lang=es`);\n    const data = await res.json();\n    data.forEach(item => {\n      if (item && item.id) {\n        iconCache[item.id] = item.icon;\n        rarityCache[item.id] = item.rarity;\n      }\n    });\n  } catch {}\n}\n\nasync function fetchItemPrices(ids = []) {\n  if (!ids || ids.length === 0) return new Map();\n  const url = `https://api.datawars2.ie/gw2/v1/items/csv?fields=id,buy_price,sell_price&ids=${ids.join(',')}`;\n  try {\n    const csv = await fetchWithRetry(url).then(r => r.text());\n    const [header, ...rows] = csv.trim().split('\\n');\n    const headers = header.split(',');\n    const idIdx = headers.indexOf('id');\n    const buyIdx = headers.indexOf('buy_price');\n    const sellIdx = headers.indexOf('sell_price');\n    const result = new Map();\n    rows.forEach(row => {\n      const cols = row.split(',');\n      const id = parseInt(cols[idIdx], 10);\n      if (!isNaN(id)) {\n        result.set(id, {\n          buy_price: parseInt(cols[buyIdx], 10) || 0,\n          sell_price: parseInt(cols[sellIdx], 10) || 0\n        });\n      }\n    });\n    return result;\n  } catch (e) {\n    return new Map();\n  }\n}\n\nif (typeof window !== 'undefined') {\n  window.FractalesUtils = { fetchIconsFor, fetchItemPrices, iconCache, rarityCache };\n}\n\n\nfunction addIconToCell(cell, icon) {\n  if (!cell || !icon) return;\n  const div = cell.querySelector('div');\n  if (!div || div.querySelector('img')) return;\n  const img = document.createElement('img');\n  img.src = icon;\n  img.className = 'item-icon';\n  div.prepend(img);\n}\n\nconst MATERIAL_IDS = {\n  t6: {\n    sangre: 24295,\n    hueso: 24358,\n    garra: 24351,\n    colmillo: 24357,\n    escama: 24289,\n    totem: 24300,\n    veneno: 24283\n  },\n  t5: {\n    sangre: 24294,\n    hueso: 24341,\n    garra: 24350,\n    colmillo: 24356,\n    escama: 24288,\n    totem: 24299,\n    veneno: 24282\n  },\n  polvo: 24277,\n  piedra: 20796\n};\n\nconst LODESTONE_IDS = {\n  cores: {\n    glacial: 24319,\n    cristal: 24329,\n    destructor: 24324,\n    cargado: 24304,\n    corrupto: 24339,\n    onice: 24309,\n    fundido: 24314\n  },\n  stones: {\n    glacial: 24320,\n    cristal: 24330,\n    destructor: 24325,\n    cargado: 24305,\n    corrupto: 24340,\n    onice: 24310,\n    fundido: 24315\n  },\n  polvo: 24277,\n  botella: 19663,\n  cristal: 20799\n};\n\nasync function renderTablaForja() {\n  const keys = Object.keys(MATERIAL_IDS.t5);\n  const ids = [\n    ...keys.map(k => MATERIAL_IDS.t5[k]),\n    ...keys.map(k => MATERIAL_IDS.t6[k]),\n    MATERIAL_IDS.polvo,\n    MATERIAL_IDS.piedra\n  ];\n  const priceMap = await fetchItemPrices(ids);\n  await fetchIconsFor(ids);\n\n  keys.forEach(key => {\n    const row = document.querySelector(`#matt5t6 tr[data-key=\"${key}\"]`);\n    if (!row) return;\n    const sumEl = row.querySelector('.sum-mats');\n    const resEl = row.querySelector('.resultado');\n    const profitEl = row.querySelector('.profit');\n\n    const precioT5 = priceMap.get(MATERIAL_IDS.t5[key])?.buy_price || 0;\n    const precioT6Buy = priceMap.get(MATERIAL_IDS.t6[key])?.buy_price || 0;\n    const precioT6Sell = priceMap.get(MATERIAL_IDS.t6[key])?.sell_price || 0;\n    const precioPolvo = priceMap.get(MATERIAL_IDS.polvo)?.buy_price || 0;\n    const precioPiedra = priceMap.get(MATERIAL_IDS.piedra)?.buy_price || 0;\n\n    const sumMats = (50 * precioT5) + (5 * precioPolvo) + (5 * precioPiedra) + precioT6Buy;\n    const resultadoBruto = 6.91 * precioT6Sell;\n    const resultadoNeto = resultadoBruto * 0.85; // 15% comisión bazar\n    const profit = resultadoNeto - sumMats;\n\n    if (sumEl) sumEl.innerHTML = window.formatGoldColored(sumMats);\n    if (resEl) resEl.innerHTML = window.formatGoldColored(resultadoNeto);\n    if (profitEl) profitEl.innerHTML = window.formatGoldColored(profit);\n\n    const cells = row.querySelectorAll('td');\n    addIconToCell(cells[0], iconCache[MATERIAL_IDS.t5[key]]);\n    addIconToCell(cells[1], iconCache[MATERIAL_IDS.t6[key]]);\n    addIconToCell(cells[2], iconCache[MATERIAL_IDS.polvo]);\n    addIconToCell(cells[3], iconCache[MATERIAL_IDS.piedra]);\n  });\n}\n\nasync function renderTablaLodestones() {\n  const coreKeys = Object.keys(LODESTONE_IDS.cores);\n  const ids = [\n    ...coreKeys.map(k => LODESTONE_IDS.cores[k]),\n    ...coreKeys.map(k => LODESTONE_IDS.stones[k]),\n    LODESTONE_IDS.polvo,\n    LODESTONE_IDS.botella,\n    LODESTONE_IDS.cristal\n  ];\n\n  const priceMap = await fetchItemPrices(ids);\n  await fetchIconsFor(ids);\n\n  coreKeys.forEach(key => {\n    const row = document.querySelector(`#tabla-lodestones tr[data-key=\"${key}\"]`);\n    if (!row) return;\n    const sumEl = row.querySelector('.sum-mats');\n    const profitEl = row.querySelector('.profit');\n\n    const precioCore = priceMap.get(LODESTONE_IDS.cores[key])?.buy_price || 0;\n    const precioLodestoneSell = priceMap.get(LODESTONE_IDS.stones[key])?.sell_price || 0;\n    const precioPolvo = priceMap.get(LODESTONE_IDS.polvo)?.buy_price || 0;\n    const precioBotella = priceMap.get(LODESTONE_IDS.botella)?.buy_price || 0;\n    const precioCristal = priceMap.get(LODESTONE_IDS.cristal)?.buy_price || 0;\n\n    const sumMats = (2 * precioCore) + precioPolvo + precioBotella + precioCristal;\n    const resultadoNeto = precioLodestoneSell * 0.85; // comisión bazar 15%\n    const profit = resultadoNeto - sumMats;\n\n    if (sumEl) sumEl.innerHTML = window.formatGoldColored(sumMats);\n    if (profitEl) profitEl.innerHTML = window.formatGoldColored(profit);\n\n    const cells = row.querySelectorAll('td');\n    addIconToCell(cells[0], iconCache[LODESTONE_IDS.cores[key]]);\n    addIconToCell(cells[1], iconCache[LODESTONE_IDS.polvo]);\n    addIconToCell(cells[2], iconCache[LODESTONE_IDS.botella]);\n    addIconToCell(cells[3], iconCache[LODESTONE_IDS.cristal]);\n    addIconToCell(cells[4], iconCache[LODESTONE_IDS.stones[key]]);\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  renderTablaForja();\n  renderTablaLodestones();\n});\n"],"names":["iconCache","rarityCache","async","fetchIconsFor","ids","length","res","fetchWithRetry","join","json","forEach","item","id","icon","rarity","fetchItemPrices","Map","url","csv","then","r","text","header","rows","trim","split","headers","idIdx","indexOf","buyIdx","sellIdx","result","row","cols","parseInt","isNaN","set","buy_price","sell_price","e","addIconToCell","cell","div","querySelector","img","document","createElement","src","className","prepend","window","FractalesUtils","MATERIAL_IDS","t6","sangre","hueso","garra","colmillo","escama","totem","veneno","t5","polvo","piedra","LODESTONE_IDS","cores","glacial","cristal","destructor","cargado","corrupto","onice","fundido","stones","botella","addEventListener","keys","Object","map","k","priceMap","key","sumEl","resEl","profitEl","precioT5","get","precioT6Buy","precioT6Sell","sumMats","resultadoNeto","profit","innerHTML","formatGoldColored","cells","querySelectorAll","renderTablaForja","coreKeys","precioCore","precioLodestoneSell","renderTablaLodestones"],"mappings":"wCAGA,MAAMA,EAAY,CAAA,EACZC,EAAc,CAAA,EAEpBC,eAAeC,EAAcC,EAAM,IACjC,GAAKA,EAAIC,OACT,IACE,MAAMC,QAAYC,EAAe,2CAA2CH,EAAII,KAAK,uBAClEF,EAAIG,QAClBC,QAAQC,IACPA,GAAQA,EAAKC,KACfZ,EAAUW,EAAKC,IAAMD,EAAKE,KAC1BZ,EAAYU,EAAKC,IAAMD,EAAKG,SAGlC,CAAE,MAAO,CACX,CAEAZ,eAAea,EAAgBX,EAAM,IACnC,IAAKA,GAAsB,IAAfA,EAAIC,OAAc,OAAO,IAAIW,IACzC,MAAMC,EAAM,gFAAgFb,EAAII,KAAK,OACrG,IACE,MAAMU,QAAYX,EAAeU,GAAKE,KAAKC,GAAKA,EAAEC,SAC3CC,KAAWC,GAAQL,EAAIM,OAAOC,MAAM,MACrCC,EAAUJ,EAAOG,MAAM,KACvBE,EAAQD,EAAQE,QAAQ,MACxBC,EAASH,EAAQE,QAAQ,aACzBE,EAAUJ,EAAQE,QAAQ,cAC1BG,EAAS,IAAIf,IAWnB,OAVAO,EAAKb,QAAQsB,IACX,MAAMC,EAAOD,EAAIP,MAAM,KACjBb,EAAKsB,SAASD,EAAKN,GAAQ,IAC5BQ,MAAMvB,IACTmB,EAAOK,IAAIxB,EAAI,CACbyB,UAAWH,SAASD,EAAKJ,GAAS,KAAO,EACzCS,WAAYJ,SAASD,EAAKH,GAAU,KAAO,MAI1CC,CACT,CAAE,MAAOQ,GACP,OAAO,IAAIvB,GACb,CACF,CAOA,SAASwB,EAAcC,EAAM5B,GAC3B,IAAK4B,IAAS5B,EAAM,OACpB,MAAM6B,EAAMD,EAAKE,cAAc,OAC/B,IAAKD,GAAOA,EAAIC,cAAc,OAAQ,OACtC,MAAMC,EAAMC,SAASC,cAAc,OACnCF,EAAIG,IAAMlC,EACV+B,EAAII,UAAY,YAChBN,EAAIO,QAAQL,EACd,CAbsB,oBAAXM,SACTA,OAAOC,eAAiB,CAAEhD,gBAAeY,kBAAiBf,YAAWC,gBAcvE,MAAMmD,EAAe,CACnBC,GAAI,CACFC,OAAQ,MACRC,MAAO,MACPC,MAAO,MACPC,SAAU,MACVC,OAAQ,MACRC,MAAO,MACPC,OAAQ,OAEVC,GAAI,CACFP,OAAQ,MACRC,MAAO,MACPC,MAAO,MACPC,SAAU,MACVC,OAAQ,MACRC,MAAO,MACPC,OAAQ,OAEVE,MAAO,MACPC,OAAQ,OAGJC,EAAgB,CACpBC,MAAO,CACLC,QAAS,MACTC,QAAS,MACTC,WAAY,MACZC,QAAS,MACTC,SAAU,MACVC,MAAO,MACPC,QAAS,OAEXC,OAAQ,CACNP,QAAS,MACTC,QAAS,MACTC,WAAY,MACZC,QAAS,MACTC,SAAU,MACVC,MAAO,MACPC,QAAS,OAEXV,MAAO,MACPY,QAAS,MACTP,QAAS,OAqFXtB,SAAS8B,iBAAiB,mBAAoB,MAlF9CzE,iBACE,MAAM0E,EAAOC,OAAOD,KAAKxB,EAAaS,IAChCzD,EAAM,IACPwE,EAAKE,IAAIC,GAAK3B,EAAaS,GAAGkB,OAC9BH,EAAKE,IAAIC,GAAK3B,EAAaC,GAAG0B,IACjC3B,EAAaU,MACbV,EAAaW,QAETiB,QAAiBjE,EAAgBX,SACjCD,EAAcC,GAEpBwE,EAAKlE,QAAQuE,IACX,MAAMjD,EAAMa,SAASF,cAAc,yBAAyBsC,OAC5D,IAAKjD,EAAK,OACV,MAAMkD,EAAQlD,EAAIW,cAAc,aAC1BwC,EAAQnD,EAAIW,cAAc,cAC1ByC,EAAWpD,EAAIW,cAAc,WAE7B0C,EAAWL,EAASM,IAAIlC,EAAaS,GAAGoB,KAAO5C,WAAa,EAC5DkD,EAAcP,EAASM,IAAIlC,EAAaC,GAAG4B,KAAO5C,WAAa,EAC/DmD,EAAeR,EAASM,IAAIlC,EAAaC,GAAG4B,KAAO3C,YAAc,EAIjEmD,EAAW,GAAKJ,EAAa,GAHfL,EAASM,IAAIlC,EAAaU,QAAQzB,WAAa,GAGZ,GAFlC2C,EAASM,IAAIlC,EAAaW,SAAS1B,WAAa,GAEMkD,EAErEG,EADiB,KAAOF,EACS,IACjCG,EAASD,EAAgBD,EAE3BP,IAAOA,EAAMU,UAAY1C,OAAO2C,kBAAkBJ,IAClDN,IAAOA,EAAMS,UAAY1C,OAAO2C,kBAAkBH,IAClDN,IAAUA,EAASQ,UAAY1C,OAAO2C,kBAAkBF,IAE5D,MAAMG,EAAQ9D,EAAI+D,iBAAiB,MACnCvD,EAAcsD,EAAM,GAAI9F,EAAUoD,EAAaS,GAAGoB,KAClDzC,EAAcsD,EAAM,GAAI9F,EAAUoD,EAAaC,GAAG4B,KAClDzC,EAAcsD,EAAM,GAAI9F,EAAUoD,EAAaU,QAC/CtB,EAAcsD,EAAM,GAAI9F,EAAUoD,EAAaW,UAEnD,CA4CEiC,GA1CF9F,iBACE,MAAM+F,EAAWpB,OAAOD,KAAKZ,EAAcC,OACrC7D,EAAM,IACP6F,EAASnB,IAAIC,GAAKf,EAAcC,MAAMc,OACtCkB,EAASnB,IAAIC,GAAKf,EAAcS,OAAOM,IAC1Cf,EAAcF,MACdE,EAAcU,QACdV,EAAcG,SAGVa,QAAiBjE,EAAgBX,SACjCD,EAAcC,GAEpB6F,EAASvF,QAAQuE,IACf,MAAMjD,EAAMa,SAASF,cAAc,kCAAkCsC,OACrE,IAAKjD,EAAK,OACV,MAAMkD,EAAQlD,EAAIW,cAAc,aAC1ByC,EAAWpD,EAAIW,cAAc,WAE7BuD,EAAalB,EAASM,IAAItB,EAAcC,MAAMgB,KAAO5C,WAAa,EAClE8D,EAAsBnB,EAASM,IAAItB,EAAcS,OAAOQ,KAAO3C,YAAc,EAK7EmD,EAAW,EAAIS,GAJDlB,EAASM,IAAItB,EAAcF,QAAQzB,WAAa,IAC9C2C,EAASM,IAAItB,EAAcU,UAAUrC,WAAa,IAClD2C,EAASM,IAAItB,EAAcG,UAAU9B,WAAa,GAIlEsD,EADsC,IAAtBQ,EACSV,EAE3BP,IAAOA,EAAMU,UAAY1C,OAAO2C,kBAAkBJ,IAClDL,IAAUA,EAASQ,UAAY1C,OAAO2C,kBAAkBF,IAE5D,MAAMG,EAAQ9D,EAAI+D,iBAAiB,MACnCvD,EAAcsD,EAAM,GAAI9F,EAAUgE,EAAcC,MAAMgB,KACtDzC,EAAcsD,EAAM,GAAI9F,EAAUgE,EAAcF,QAChDtB,EAAcsD,EAAM,GAAI9F,EAAUgE,EAAcU,UAChDlC,EAAcsD,EAAM,GAAI9F,EAAUgE,EAAcG,UAChD3B,EAAcsD,EAAM,GAAI9F,EAAUgE,EAAcS,OAAOQ,MAE3D,CAIEmB"}