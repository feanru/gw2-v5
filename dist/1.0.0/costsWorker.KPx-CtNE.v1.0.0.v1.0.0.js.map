{"version":3,"file":"costsWorker.KPx-CtNE.js","sources":["../../src/js/workers/costsWorker.js"],"sourcesContent":["class CraftIngredient {\n  constructor({id, name, icon, rarity, count, buy_price, sell_price, is_craftable, recipe, children = [], _parentId = null}) {\n    this._uid = CraftIngredient.nextUid++;\n    this.id = id;\n    this.name = name;\n    this.icon = icon;\n    this.rarity = rarity;\n    this.count = count;\n    this.buy_price = buy_price;\n    this.sell_price = sell_price;\n    this.is_craftable = is_craftable;\n    this.recipe = recipe || null;\n    this.children = children;\n    this.mode = 'buy';\n    this.modeForParentCrafted = 'buy';\n    this.expanded = false;\n    this._parentId = _parentId;\n    this._parent = null;\n    this.countTotal = 0;\n    this.crafted_price = null;\n    this.total_buy = 0;\n    this.total_sell = 0;\n    this.total_crafted = 0;\n  }\n\n  findRoot() {\n    let current = this;\n    while (current._parent) current = current._parent;\n    return current;\n  }\n\n  setMode(newMode) {\n    if (['buy', 'sell', 'crafted'].includes(newMode)) {\n      this.modeForParentCrafted = newMode;\n      const root = this.findRoot();\n      root.recalc(globalThis.globalQty || 1, null);\n      if (typeof globalThis.safeRenderTable === 'function') globalThis.safeRenderTable();\n    }\n  }\n\n  recalc(globalQty = 1, parent = null) {\n    const isRoot = parent == null;\n    const isMysticCloverSpecial = this.id === 19675 && (this.count === 77 || this.count === 38);\n    if (isRoot) {\n      this.countTotal = this.count * globalQty;\n    } else if (isMysticCloverSpecial) {\n      this.countTotal = this.count;\n    } else {\n      this.countTotal = parent.countTotal * this.count;\n    }\n\n    if (this.children && this.children.length > 0) {\n      if (isMysticCloverSpecial) {\n        const manualCounts = this.count === 77 ? [250, 250, 250, 1500] : [38, 38, 38, 38];\n        this.children.forEach((child, idx) => {\n          child.countTotal = manualCounts[idx] || 0;\n          child.total_buy = (child.buy_price || 0) * child.countTotal;\n          child.total_sell = (child.sell_price || 0) * child.countTotal;\n        });\n      } else {\n        this.children.forEach(child => child.recalc(globalQty, this));\n      }\n    }\n\n    if (isRoot || isMysticCloverSpecial) {\n      this.total_buy = this.children.reduce((s, c) => s + (c.total_buy || 0), 0);\n      this.total_sell = this.children.reduce((s, c) => s + (c.total_sell || 0), 0);\n    } else {\n      this.total_buy = (this.buy_price || 0) * this.countTotal;\n      this.total_sell = (this.sell_price || 0) * this.countTotal;\n    }\n\n    if (this.is_craftable && this.children.length > 0) {\n      this.total_crafted = this.children.reduce((sum, ing) => {\n        switch (ing.modeForParentCrafted) {\n          case 'sell': return sum + (ing.total_sell || 0);\n          case 'crafted': return sum + (ing.total_crafted || 0);\n          default: return sum + (ing.total_buy || 0);\n        }\n      }, 0);\n      this.crafted_price = this.total_crafted / (this.recipe?.output_item_count || 1);\n\n      if (!isRoot && (!this.buy_price && !this.sell_price)) {\n        this.total_buy = this.children.reduce((s, c) => s + (c.total_buy || 0), 0);\n        this.total_sell = this.children.reduce((s, c) => s + (c.total_sell || 0), 0);\n      }\n    } else {\n      this.total_crafted = null;\n      this.crafted_price = null;\n    }\n  }\n\n  getBestPrice() {\n    if (typeof this.buy_price === 'number' && this.buy_price > 0) return this.buy_price;\n    if (typeof this.crafted_price === 'number' && this.crafted_price > 0) return this.crafted_price;\n    return 0;\n  }\n}\n\nCraftIngredient.nextUid = 0;\n\nconst ctx = typeof self !== 'undefined' ? self : globalThis;\n\nfunction rebuildTreeArray(tree) {\n  if (!Array.isArray(tree)) return [];\n  return tree.map(node => rebuildNode(node, null));\n}\n\nfunction rebuildNode(data, parent) {\n  const ing = new CraftIngredient(data);\n  Object.assign(ing, data);\n  if (typeof data._uid === 'number') {\n    ing._uid = data._uid;\n    if (CraftIngredient.nextUid <= data._uid) {\n      CraftIngredient.nextUid = data._uid + 1;\n    }\n  }\n  ing._parent = parent || null;\n  ing.children = Array.isArray(data.children)\n    ? data.children.map(child => rebuildNode(child, ing))\n    : [];\n  return ing;\n}\n\nfunction recalcAll(ingredientObjs, globalQty) {\n  if (!ingredientObjs) return;\n  ingredientObjs.forEach((ing) => {\n    ing.recalc(globalQty, null);\n  });\n}\n\nfunction getTotals(ingredientObjs) {\n  let totalBuy = 0, totalSell = 0, totalCrafted = 0;\n  for (const ing of ingredientObjs) {\n    totalBuy += ing.total_buy || 0;\n    totalSell += ing.total_sell || 0;\n    switch (ing.modeForParentCrafted) {\n      case 'sell':\n        totalCrafted += ing.total_sell || 0;\n        break;\n      case 'crafted':\n        totalCrafted += ing.total_crafted || 0;\n        break;\n      default:\n        totalCrafted += ing.total_buy || 0;\n        break;\n    }\n  }\n  return { totalBuy, totalSell, totalCrafted };\n}\n\nctx.onmessage = (e) => {\n  const { ingredientTree, globalQty } = e.data || {};\n  const ingredientObjs = rebuildTreeArray(ingredientTree);\n  recalcAll(ingredientObjs, globalQty);\n  const totals = getTotals(ingredientObjs);\n  ctx.postMessage({ updatedTree: ingredientObjs, totals });\n};\n\nexport { rebuildTreeArray, recalcAll, getTotals };\n\n"],"names":["CraftIngredient","constructor","id","name","icon","rarity","count","buy_price","sell_price","is_craftable","recipe","children","_parentId","this","_uid","nextUid","mode","modeForParentCrafted","expanded","_parent","countTotal","crafted_price","total_buy","total_sell","total_crafted","findRoot","current","setMode","newMode","includes","recalc","globalThis","globalQty","safeRenderTable","parent","isRoot","isMysticCloverSpecial","length","manualCounts","forEach","child","idx","reduce","s","c","sum","ing","output_item_count","getBestPrice","ctx","self","rebuildTreeArray","tree","Array","isArray","map","node","rebuildNode","data","Object","assign","recalcAll","ingredientObjs","getTotals","totalBuy","totalSell","totalCrafted","onmessage","e","ingredientTree","totals","postMessage","updatedTree"],"mappings":"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"}