{"version":3,"file":"costsWorker.3mIhhsaN.js","sources":["../../src/js/workers/costsWorker.js"],"sourcesContent":["import { CraftIngredient } from '../items-core.js';\n\nconst ctx = typeof self !== 'undefined' ? self : globalThis;\n\nfunction rebuildTreeArray(tree) {\n  if (!Array.isArray(tree)) return [];\n  return tree.map(node => rebuildNode(node, null));\n}\n\nfunction rebuildNode(data, parent) {\n  const ing = new CraftIngredient(data);\n  Object.assign(ing, data);\n  if (typeof data._uid === 'number') {\n    ing._uid = data._uid;\n    if (CraftIngredient.nextUid <= data._uid) {\n      CraftIngredient.nextUid = data._uid + 1;\n    }\n  }\n  ing._parent = parent || null;\n  ing.children = Array.isArray(data.children)\n    ? data.children.map(child => rebuildNode(child, ing))\n    : [];\n  return ing;\n}\n\nfunction recalcAll(ingredientObjs, globalQty) {\n  if (!ingredientObjs) return;\n  ingredientObjs.forEach((ing) => {\n    ing.recalc(globalQty, null);\n  });\n}\n\nfunction getTotals(ingredientObjs) {\n  let totalBuy = 0, totalSell = 0, totalCrafted = 0;\n  for (const ing of ingredientObjs) {\n    totalBuy += ing.total_buy || 0;\n    totalSell += ing.total_sell || 0;\n    switch (ing.modeForParentCrafted) {\n      case 'sell':\n        totalCrafted += ing.total_sell || 0;\n        break;\n      case 'crafted':\n        totalCrafted += ing.total_crafted || 0;\n        break;\n      default:\n        totalCrafted += ing.total_buy || 0;\n        break;\n    }\n  }\n  return { totalBuy, totalSell, totalCrafted };\n}\n\nctx.onmessage = (e) => {\n  const { ingredientTree, globalQty } = e.data || {};\n  const ingredientObjs = rebuildTreeArray(ingredientTree);\n  recalcAll(ingredientObjs, globalQty);\n  const totals = getTotals(ingredientObjs);\n  ctx.postMessage({ updatedTree: ingredientObjs, totals });\n};\n\nexport { rebuildTreeArray, recalcAll, getTotals };\n\n"],"names":["ctx","self","globalThis","rebuildTreeArray","tree","Array","isArray","map","node","rebuildNode","data","parent","ing","CraftIngredient","Object","assign","_uid","nextUid","_parent","children","child","recalcAll","ingredientObjs","globalQty","forEach","recalc","getTotals","totalBuy","totalSell","totalCrafted","total_buy","total_sell","modeForParentCrafted","total_crafted","onmessage","e","ingredientTree","totals","postMessage","updatedTree"],"mappings":"2FAEA,MAAMA,EAAsB,oBAATC,KAAuBA,KAAOC,WAEjD,SAASC,EAAiBC,GACxB,OAAKC,MAAMC,QAAQF,GACZA,EAAKG,IAAIC,GAAQC,EAAYD,EAAM,OADT,EAEnC,CAEA,SAASC,EAAYC,EAAMC,GACzB,MAAMC,EAAM,IAAIC,EAAgBH,GAYhC,OAXAI,OAAOC,OAAOH,EAAKF,GACM,iBAAdA,EAAKM,OACdJ,EAAII,KAAON,EAAKM,KACZH,EAAgBI,SAAWP,EAAKM,OAClCH,EAAgBI,QAAUP,EAAKM,KAAO,IAG1CJ,EAAIM,QAAUP,GAAU,KACxBC,EAAIO,SAAWd,MAAMC,QAAQI,EAAKS,UAC9BT,EAAKS,SAASZ,IAAIa,GAASX,EAAYW,EAAOR,IAC9C,GACGA,CACT,CAEA,SAASS,EAAUC,EAAgBC,GAC5BD,GACLA,EAAeE,QAASZ,IACtBA,EAAIa,OAAOF,EAAW,OAE1B,CAEA,SAASG,EAAUJ,GACjB,IAAIK,EAAW,EAAGC,EAAY,EAAGC,EAAe,EAChD,IAAK,MAAMjB,KAAOU,EAGhB,OAFAK,GAAYf,EAAIkB,WAAa,EAC7BF,GAAahB,EAAImB,YAAc,EACvBnB,EAAIoB,sBACV,IAAK,OACHH,GAAgBjB,EAAImB,YAAc,EAClC,MACF,IAAK,UACHF,GAAgBjB,EAAIqB,eAAiB,EACrC,MACF,QACEJ,GAAgBjB,EAAIkB,WAAa,EAIvC,MAAO,CAAEH,WAAUC,YAAWC,eAChC,CAEA7B,EAAIkC,UAAaC,IACf,MAAMC,eAAEA,EAAcb,UAAEA,GAAcY,EAAEzB,MAAQ,CAAA,EAC1CY,EAAiBnB,EAAiBiC,GACxCf,EAAUC,EAAgBC,GAC1B,MAAMc,EAASX,EAAUJ,GACzBtB,EAAIsC,YAAY,CAAEC,YAAajB,EAAgBe"}