{"version":3,"file":"items-core.DbLmvs0P.min.js","sources":["../../src/js/items-core.js"],"sourcesContent":["// Common item functions used across item and compare views\n// Copied from original item.js for reuse\n\nimport { getCached, setCached } from './utils/cache.min.js';\nimport { fetchWithCache } from './utils/requestCache.min.js';\nimport { getPrice, preloadPrices } from './utils/priceHelper.min.js';\n\nif (typeof window !== 'undefined') {\n  window.ingredientObjs = window.ingredientObjs || [];\n  window.globalQty = window.globalQty || 1;\n  window._mainBuyPrice = window._mainBuyPrice || 0;\n  window._mainSellPrice = window._mainSellPrice || 0;\n  window._mainRecipeOutputCount = window._mainRecipeOutputCount || 1;\n}\n\nexport function setIngredientObjs(val) {\n  if (Array.isArray(val)) {\n    restoreCraftIngredientPrototypes(val, null);\n  }\n  window.ingredientObjs = val;\n}\n\n// -------------------------\n// Core data structures\n// -------------------------\n\nexport class CraftIngredient {\n  constructor({id, name, icon, rarity, count, buy_price, sell_price, is_craftable, recipe, children = [], _parentId = null}) {\n    this._uid = CraftIngredient.nextUid++;\n    this.id = id;\n    this.name = name;\n    this.icon = icon;\n    this.rarity = rarity;\n    this.count = count;\n    this.buy_price = buy_price;\n    this.sell_price = sell_price;\n    this.is_craftable = is_craftable;\n    this.recipe = recipe || null;\n    this.children = children;\n    this.mode = 'buy';\n    this.modeForParentCrafted = 'buy';\n    this.expanded = false;\n    this._parentId = _parentId;\n    this._parent = null;\n    this.countTotal = 0;\n    this.crafted_price = null;\n    this.total_buy = 0;\n    this.total_sell = 0;\n    this.total_crafted = 0;\n  }\n\n  findRoot() {\n    let current = this;\n    while (current._parent) current = current._parent;\n    return current;\n  }\n\n  setMode(newMode) {\n    if (['buy', 'sell', 'crafted'].includes(newMode)) {\n      this.modeForParentCrafted = newMode;\n      const root = this.findRoot();\n      root.recalc(window.globalQty || 1, null);\n      if (typeof window.safeRenderTable === 'function') window.safeRenderTable();\n    }\n  }\n\n  recalc(globalQty = 1, parent = null) {\n    const isRoot = parent == null;\n    const isMysticCloverSpecial = this.id === 19675 && (this.count === 77 || this.count === 38);\n    if (isRoot) {\n      this.countTotal = this.count * globalQty;\n    } else if (isMysticCloverSpecial) {\n      this.countTotal = this.count;\n    } else {\n      this.countTotal = parent.countTotal * this.count;\n    }\n\n    if (this.children && this.children.length > 0) {\n      if (isMysticCloverSpecial) {\n        const manualCounts = this.count === 77 ? [250, 250, 250, 1500] : [38, 38, 38, 38];\n        this.children.forEach((child, idx) => {\n          child.countTotal = manualCounts[idx] || 0;\n          child.total_buy = (child.buy_price || 0) * child.countTotal;\n          child.total_sell = (child.sell_price || 0) * child.countTotal;\n        });\n      } else {\n        this.children.forEach(child => child.recalc(globalQty, this));\n      }\n    }\n\n    if (isRoot || isMysticCloverSpecial) {\n      this.total_buy = this.children.reduce((s, c) => s + (c.total_buy || 0), 0);\n      this.total_sell = this.children.reduce((s, c) => s + (c.total_sell || 0), 0);\n    } else {\n      this.total_buy = (this.buy_price || 0) * this.countTotal;\n      this.total_sell = (this.sell_price || 0) * this.countTotal;\n    }\n\n    if (this.is_craftable && this.children.length > 0) {\n      this.total_crafted = this.children.reduce((sum, ing) => {\n        switch (ing.modeForParentCrafted) {\n          case 'buy': return sum + (ing.total_buy || 0);\n          case 'sell': return sum + (ing.total_sell || 0);\n          case 'crafted': return sum + (ing.total_crafted || 0);\n          default: return sum + (ing.total_buy || 0);\n        }\n      }, 0);\n      this.crafted_price = this.total_crafted / (this.recipe?.output_item_count || 1);\n      // Nota: total_crafted se deriva exclusivamente del modo\n      // (modeForParentCrafted) de cada hijo y no debe ser\n      // sobrescrito fuera de este método.\n\n      if (!isRoot && (!this.buy_price && !this.sell_price)) {\n        this.total_buy = this.children.reduce((s, c) => s + (c.total_buy || 0), 0);\n        this.total_sell = this.children.reduce((s, c) => s + (c.total_sell || 0), 0);\n      }\n    } else {\n      this.total_crafted = null;\n      this.crafted_price = null;\n    }\n  }\n\n  getBestPrice() {\n    if (typeof this.buy_price === 'number' && this.buy_price > 0) return this.buy_price;\n    if (typeof this.crafted_price === 'number' && this.crafted_price > 0) return this.crafted_price;\n    return 0;\n  }\n}\n\nCraftIngredient.nextUid = 0;\n\nexport function restoreCraftIngredientPrototypes(nodes, parent = null) {\n  if (!Array.isArray(nodes)) return;\n  for (const node of nodes) {\n    Object.setPrototypeOf(node, CraftIngredient.prototype);\n    if (typeof node._uid === 'number' && CraftIngredient.nextUid <= node._uid) {\n      CraftIngredient.nextUid = node._uid + 1;\n    }\n    node._parent = parent;\n    if (parent) node._parentId = parent._uid;\n    if (Array.isArray(node.children) && node.children.length > 0) {\n      restoreCraftIngredientPrototypes(node.children, node);\n    } else {\n      node.children = [];\n    }\n  }\n}\n\nexport function setGlobalQty(val) {\n  window.globalQty = val;\n}\n\nexport function snapshotExpandState(ings) {\n  if (!ings) return [];\n  return ings.map(ing => ({\n    id: ing.id,\n    expanded: ing.expanded,\n    children: snapshotExpandState(ing.children || [])\n  }));\n}\n\nexport function restoreExpandState(ings, snapshot) {\n  if (!ings || !snapshot) return;\n  for (let i = 0; i < ings.length; i++) {\n    if (snapshot[i]) {\n      ings[i].expanded = snapshot[i].expanded;\n      restoreExpandState(ings[i].children, snapshot[i].children);\n    }\n  }\n}\n\nlet costsWorker = null;\nlet lastTotals = { totalBuy: 0, totalSell: 0, totalCrafted: 0 };\n\nexport function recalcAll(ingredientObjs, globalQty) {\n  if (!ingredientObjs) return Promise.resolve();\n  if (!costsWorker) {\n    const workerUrl = (typeof window !== 'undefined' && window.COSTS_WORKER_HASH)\n      ? `/dist/${window.__APP_VERSION__}/costsWorker.${window.COSTS_WORKER_HASH}.js?v=${window.__APP_VERSION__}`\n      : new URL('./workers/costsWorker.js', import.meta.url);\n    costsWorker = new Worker(workerUrl, { type: 'module' });\n  }\n  return new Promise((resolve, reject) => {\n    const handleMessage = (e) => {\n      costsWorker.removeEventListener('message', handleMessage);\n      costsWorker.removeEventListener('error', handleError);\n      const { updatedTree, totals } = e.data || {};\n      if (Array.isArray(updatedTree)) {\n        restoreCraftIngredientPrototypes(updatedTree, null);\n      }\n      function apply(src, dest) {\n        Object.assign(dest, src);\n        if (src.children && dest.children) {\n          for (let i = 0; i < src.children.length; i++) {\n            apply(src.children[i], dest.children[i]);\n          }\n        }\n      }\n      if (Array.isArray(updatedTree)) {\n        for (let i = 0; i < updatedTree.length; i++) {\n          apply(updatedTree[i], ingredientObjs[i]);\n        }\n      }\n      lastTotals = totals || { totalBuy: 0, totalSell: 0, totalCrafted: 0 };\n      resolve();\n    };\n    const handleError = (err) => {\n      costsWorker.removeEventListener('message', handleMessage);\n      costsWorker.removeEventListener('error', handleError);\n      reject(err);\n    };\n    costsWorker.addEventListener('message', handleMessage);\n    costsWorker.addEventListener('error', handleError);\n    costsWorker.postMessage({ ingredientTree: ingredientObjs, globalQty });\n  });\n}\n\n// Devuelve los últimos totales globales calculados por recalcAll.\n// Siempre ejecutar recalcAll antes de llamar para obtener datos actualizados.\n// Siempre retorna los totales globales y no acepta parámetros.\nexport function getTotals() {\n  return lastTotals;\n}\n\nexport function findIngredientByIdAndParent(ings, id, parentId) {\n  for (const ing of ings) {\n    if (String(ing.id) === String(id) && String(ing._parentId) === String(parentId)) {\n      return ing;\n    }\n    if (Array.isArray(ing.children) && ing.children.length) {\n      const found = findIngredientByIdAndParent(ing.children, id, parentId);\n      if (found) return found;\n    }\n  }\n  return null;\n}\n\nexport function findIngredientByPath(ings, pathArr) {\n  let current = ings;\n  let ing = null;\n  for (let i = 0; i < pathArr.length; i++) {\n    const val = pathArr[i];\n    ing = (current || []).find(n => String(n._uid) === String(val) || String(n.id) === String(val));\n    if (!ing) return null;\n    current = ing.children;\n  }\n  return ing;\n}\n\nexport function findIngredientByUid(ings, uid) {\n  for (const ing of ings) {\n    if (String(ing._uid) === String(uid)) return ing;\n    if (ing.children && ing.children.length) {\n      const found = findIngredientByUid(ing.children, uid);\n      if (found) return found;\n    }\n  }\n  return null;\n}\n\nexport function findIngredientById(ings, id) {\n  for (const ing of ings) {\n    if (String(ing.id) === String(id)) return ing;\n    if (ing.children && ing.children.length) {\n      const found = findIngredientById(ing.children, id);\n      if (found) return found;\n    }\n  }\n  return null;\n}\n\nexport function findIngredientsById(ings, id, acc = []) {\n  if (!Array.isArray(ings)) return acc;\n  for (const ing of ings) {\n    if (String(ing.id) === String(id)) acc.push(ing);\n    if (ing.children && ing.children.length) {\n      findIngredientsById(ing.children, id, acc);\n    }\n  }\n  return acc;\n}\n\n// -------------------------\n// API helpers\n// -------------------------\n\nconst activeControllers = new Set();\n\nfunction trackController(controller) {\n  activeControllers.add(controller);\n  return controller;\n}\n\nexport function cancelItemRequests() {\n  activeControllers.forEach(c => c.abort());\n  activeControllers.clear();\n  if (ingredientTreeWorker) {\n    ingredientTreeWorker.terminate();\n    ingredientTreeWorker = null;\n  }\n}\n\nexport async function fetchItemData(id) {\n  const controller = trackController(new AbortController());\n  const cacheKey = `item_${id}`;\n  const cached = getCached(cacheKey, true);\n  const requestHeaders = {};\n  if (cached?.etag) requestHeaders['If-None-Match'] = cached.etag;\n  if (cached?.lastModified) requestHeaders['If-Modified-Since'] = cached.lastModified;\n\n  try {\n    // Intentar primero obtener los datos desde el backend para detectar nested_recipe\n    try {\n      const backendRes = await fetchWithCache(`/backend/api/itemBundle.php?ids=${id}`, {\n        headers: requestHeaders,\n        signal: controller.signal\n      });\n      if (backendRes.ok) {\n        const arr = await backendRes.json();\n        const entry = Array.isArray(arr) ? arr[0] : null;\n        if (entry && entry.item) {\n          const data = entry.item;\n          if (entry.nested_recipe) data.nested_recipe = entry.nested_recipe;\n          const etag = backendRes.headers.get('ETag');\n          const lastModified = backendRes.headers.get('Last-Modified');\n          const ttl = etag || lastModified ? null : undefined;\n          data.lastUpdated = new Date().toISOString();\n          setCached(cacheKey, data, ttl, { etag, lastModified });\n          return data;\n        }\n      }\n    } catch (e) {\n      // Ignorar y usar el fallback\n    }\n\n    const r = await fetchWithCache(`https://api.guildwars2.com/v2/items/${id}?lang=es`, {\n      headers: requestHeaders,\n      signal: controller.signal\n    });\n    if (r.status === 304 && cached) return cached.value;\n    if (!r.ok) throw new Error(`Error ${r.status} obteniendo datos del ítem ${id}`);\n\n    const data = await r.json();\n    data.lastUpdated = new Date().toISOString();\n    const etag = r.headers.get('ETag');\n    const lastModified = r.headers.get('Last-Modified');\n    const ttl = etag || lastModified ? null : undefined;\n    setCached(cacheKey, data, ttl, { etag, lastModified });\n    return data;\n  } finally {\n    activeControllers.delete(controller);\n  }\n}\n\nlet ingredientTreeWorker = null;\n\nexport async function prepareIngredientTreeData(mainItemId, mainRecipeData) {\n  if (!mainRecipeData || !mainRecipeData.ingredients || mainRecipeData.ingredients.length === 0) {\n    window.ingredientObjs = [];\n    window._mainRecipeOutputCount = mainRecipeData ? (mainRecipeData.output_item_count || 1) : 1;\n    return [];\n  }\n\n  // Si el backend provee un árbol anidado, usarlo directamente\n  if (mainRecipeData.nested_recipe) {\n    window._mainRecipeOutputCount = mainRecipeData.output_item_count || 1;\n    const deserialized = (mainRecipeData.nested_recipe || []).map(obj =>\n      createCraftIngredientFromRecipe(obj, null)\n    );\n    restoreCraftIngredientPrototypes(deserialized, null);\n    deserialized.forEach(root => root.recalc(window.globalQty, null));\n    return deserialized;\n  }\n\n  // Fallback al worker si el backend no envía nested_recipe\n  if (ingredientTreeWorker) {\n    ingredientTreeWorker.terminate();\n  }\n  ingredientTreeWorker = new Worker(new URL('./workers/ingredientTreeWorker.js', import.meta.url), { type: 'module' });\n\n  return new Promise((resolve, reject) => {\n    const handleMessage = (event) => {\n      ingredientTreeWorker.removeEventListener('message', handleMessage);\n      ingredientTreeWorker.removeEventListener('error', handleError);\n      const { tree, error } = event.data || {};\n      ingredientTreeWorker = null;\n      if (error) {\n        const err = new Error(error);\n        console.error('Error en ingredientTreeWorker:', err.message, err);\n        const msg = `Error procesando ingredientes: ${err.message}`;\n        if (window.StorageUtils && typeof window.StorageUtils.showToast === 'function') {\n          window.StorageUtils.showToast(msg, 'error');\n        } else if (typeof alert === 'function') {\n          alert(msg);\n        }\n        reject(err);\n        return;\n      }\n      let serialized = tree || [];\n      if (!Array.isArray(serialized)) {\n        if (serialized && typeof serialized === 'object') {\n          serialized = Array.isArray(serialized.children) ? serialized.children : [serialized];\n        } else {\n          serialized = [];\n        }\n      }\n      const deserialized = serialized.map(obj => createCraftIngredientFromRecipe(obj, null));\n      restoreCraftIngredientPrototypes(deserialized, null);\n      deserialized.forEach(root => root.recalc(window.globalQty, null));\n      resolve(deserialized);\n    };\n    const handleError = (err) => {\n      ingredientTreeWorker.removeEventListener('message', handleMessage);\n      ingredientTreeWorker.removeEventListener('error', handleError);\n      ingredientTreeWorker = null;\n      console.error('Error en ingredientTreeWorker:', err?.message || err, err);\n      const msg = `Error procesando ingredientes${err?.message ? `: ${err.message}` : ''}`;\n      if (window.StorageUtils && typeof window.StorageUtils.showToast === 'function') {\n        window.StorageUtils.showToast(msg, 'error');\n      } else if (typeof alert === 'function') {\n        alert(msg);\n      }\n      reject(err);\n    };\n    ingredientTreeWorker.addEventListener('message', handleMessage);\n    ingredientTreeWorker.addEventListener('error', handleError);\n    ingredientTreeWorker.postMessage({ mainItemId, mainRecipeData });\n  });\n}\n\nexport async function fetchRecipeData(outputItemId) {\n  const controller = trackController(new AbortController());\n  const cacheKey = `recipe_${outputItemId}`;\n  const cached = getCached(cacheKey);\n  if (cached) {\n    activeControllers.delete(controller);\n    return cached;\n  }\n  try {\n    const recipeSearch = await fetchWithCache(`https://api.guildwars2.com/v2/recipes/search?output=${outputItemId}`, {\n      signal: controller.signal\n    });\n    if (!recipeSearch.ok) return null;\n    const ids = await recipeSearch.json();\n    if (!ids || ids.length === 0) return null;\n    const recipeId = ids[0];\n    const recipeRes = await fetchWithCache(`https://api.guildwars2.com/v2/recipes/${recipeId}?lang=es`, {\n      signal: controller.signal\n    });\n    if (!recipeRes.ok) throw new Error(`Error ${recipeRes.status} obteniendo datos de la receta ${recipeId}`);\n    const recipe = await recipeRes.json();\n    recipe.lastUpdated = new Date().toISOString();\n    setCached(cacheKey, recipe);\n    return recipe;\n  } finally {\n    activeControllers.delete(controller);\n  }\n}\n\nexport function createCraftIngredientFromRecipe(recipe, parentUid = null) {\n  const ingredient = new CraftIngredient({\n    id: recipe.id,\n    name: recipe.name,\n    icon: recipe.icon,\n    rarity: recipe.rarity,\n    count: recipe.count || 1,\n    recipe: recipe.recipe || null,\n    buy_price: recipe.buy_price || 0,\n    sell_price: recipe.sell_price || 0,\n    is_craftable: recipe.is_craftable || false,\n    children: [],\n    _parentId: parentUid\n  });\n  if (recipe.children && recipe.children.length > 0) {\n    ingredient.children = recipe.children.map(child =>\n      createCraftIngredientFromRecipe(\n        structuredClone ? structuredClone(child) : JSON.parse(JSON.stringify(child)),\n        ingredient._uid\n      )\n    );\n  }\n  return ingredient;\n}\n\n// -------------------------\n// Comparativa helpers\n// -------------------------\n\nif (typeof window !== 'undefined') {\n  if (typeof window.comparativa === 'undefined') {\n    window.comparativa = {};\n  }\n\n    let comparativaUpdater = null;\n    async function comparativaTick(ids) {\n      const priceMap = await preloadPrices(ids);\n      ids.forEach(id => {\n        const data = priceMap.get(id) || {};\n        const ing = findIngredientById(window.ingredientObjs, id);\n        if (!ing) return;\n        ing.buy_price = data.buy_price || 0;\n        ing.sell_price = data.sell_price || 0;\n        if (typeof ing.recalc === 'function') {\n          ing.recalc(window.globalQty || 1, null);\n        }\n      });\n      if (typeof window.safeRenderTable === 'function') {\n        window.safeRenderTable();\n      }\n    }\n\n    function refreshComparativaUpdater() {\n      const ids = window.ingredientObjs ? window.ingredientObjs.map(obj => obj.id) : [];\n      if (comparativaUpdater) {\n        clearInterval(comparativaUpdater);\n        comparativaUpdater = null;\n      }\n      if (ids.length === 0) return;\n      const run = () => comparativaTick(ids);\n      run();\n      comparativaUpdater = setInterval(run, 60000);\n    }\n\n  window.comparativa.agregarItemPorId = async function(id) {\n    window.ingredientObjs = window.ingredientObjs || [];\n    window.globalQty = window.globalQty || 1;\n    if (window.ingredientObjs.some(obj => obj.id == id)) return;\n    const skeleton = document.getElementById('item-skeleton');\n    try {\n      if (typeof window.showSkeleton === 'function') window.showSkeleton(skeleton);\n      const itemData = await fetchItemData(id);\n      const recipeData = await fetchRecipeData(id);\n      let marketData;\n      let ingredientesArbol;\n      if (recipeData) {\n        let hijos = await prepareIngredientTreeData(id, recipeData);\n        if (!Array.isArray(hijos)) hijos = [];\n        marketData = await getPrice(id);\n        window._mainBuyPrice = marketData.buy_price || 0;\n        window._mainSellPrice = marketData.sell_price || 0;\n        window._mainRecipeOutputCount = recipeData ? (recipeData.output_item_count || 1) : 1;\n        ingredientesArbol = new CraftIngredient({\n          id: itemData.id,\n          name: itemData.name,\n          icon: itemData.icon,\n          rarity: itemData.rarity,\n          count: 1,\n          buy_price: marketData.buy_price,\n          sell_price: marketData.sell_price,\n          is_craftable: true,\n          recipe: recipeData,\n          children: hijos,\n        });\n        ingredientesArbol.recalc(window.globalQty || 1, null);\n      } else {\n        marketData = await getPrice(id);\n        window._mainBuyPrice = marketData.buy_price || 0;\n        window._mainSellPrice = marketData.sell_price || 0;\n        window._mainRecipeOutputCount = 1;\n        ingredientesArbol = new CraftIngredient({\n          id: itemData.id,\n          name: itemData.name,\n          icon: itemData.icon,\n          rarity: itemData.rarity,\n          count: 1,\n          buy_price: marketData.buy_price,\n          sell_price: marketData.sell_price,\n          is_craftable: false,\n          recipe: null,\n          children: [],\n        });\n      }\n      window.ingredientObjs.push(ingredientesArbol);\n      refreshComparativaUpdater();\n      if (typeof window.safeRenderTable === 'function') {\n        if (typeof marketData.buy_price === 'number' && typeof marketData.sell_price === 'number') {\n          window.safeRenderTable(marketData.buy_price, marketData.sell_price);\n        } else {\n          window.safeRenderTable();\n        }\n      }\n      if (typeof window.hideSkeleton === 'function') window.hideSkeleton(skeleton);\n    } catch (e) {\n      if (typeof window.hideSkeleton === 'function') window.hideSkeleton(skeleton);\n      const msg = 'Error al agregar el ítem: ' + (e?.message || e);\n      if (window.StorageUtils && typeof window.StorageUtils.showToast === 'function') {\n        window.StorageUtils.showToast(msg, 'error');\n      } else if (typeof alert === 'function') {\n        alert(msg);\n      }\n      console.error('Error al agregar el ítem', e);\n    }\n  };\n\n  window.comparativa.handleSaveComparativa = async function() {\n    if (!window.ingredientObjs || window.ingredientObjs.length === 0) {\n      window.StorageUtils?.showToast('Agrega al menos un ítem a la comparativa', 'error');\n      return;\n    }\n    const ids = window.ingredientObjs.map(obj => obj.id);\n    const nombres = window.ingredientObjs.map(obj => obj.name);\n    const comparativa = { ids, nombres, timestamp: Date.now() };\n    if (window.StorageUtils && typeof window.StorageUtils.saveComparativa === 'function') {\n      await window.StorageUtils.saveComparativa(comparativa);\n      window.StorageUtils.showToast('Comparativa guardada');\n    } else {\n      alert('StorageUtils no está disponible.');\n    }\n  };\n\n  window.comparativa.loadComparativaFromURL = function() {\n    const params = new URLSearchParams(window.location.search);\n    const idsParam = params.get('ids');\n    if (!idsParam) return;\n    const ids = idsParam.split(',').map(id => parseInt(id,10)).filter(n => !isNaN(n));\n    if (ids.length === 0) return;\n    window.ingredientObjs = window.ingredientObjs || [];\n    window.globalQty = window.globalQty || 1;\n    const tryLoad = () => {\n      if (window.comparativa && typeof window.comparativa.agregarItemPorId === 'function') {\n        (async () => {\n          const CHUNK_SIZE = 10;\n          for (let i = 0; i < ids.length; i += CHUNK_SIZE) {\n            const chunk = ids.slice(i, i + CHUNK_SIZE);\n            const results = await Promise.allSettled(\n              chunk.map(id => window.comparativa.agregarItemPorId(id))\n            );\n            results.forEach((res, idx) => {\n              if (res.status === 'rejected') {\n                console.error('Error cargando ítem de la URL', chunk[idx], res.reason);\n              }\n            });\n          }\n        })();\n      } else {\n        setTimeout(tryLoad, 50);\n      }\n    };\n    tryLoad();\n  };\n}\n\nexport function calcPercent(sold, available) {\n  if (!sold || !available || isNaN(sold) || isNaN(available) || available === 0) return '-';\n  return ((sold / available) * 100).toFixed(1) + '%';\n}\n\n// Assign to window for non-module scripts\nif (typeof window !== 'undefined') {\n  window.setIngredientObjs = setIngredientObjs;\n  window.setGlobalQty = setGlobalQty;\n  window.snapshotExpandState = snapshotExpandState;\n  window.restoreExpandState = restoreExpandState;\n  window.recalcAll = recalcAll;\n  // getTotals() siempre retorna los totales globales calculados por recalcAll\n  window.getTotals = getTotals;\n  window.findIngredientByIdAndParent = findIngredientByIdAndParent;\n  window.findIngredientByPath = findIngredientByPath;\n  window.findIngredientByUid = findIngredientByUid;\n  window.findIngredientById = findIngredientById;\n  window.findIngredientsById = findIngredientsById;\n  window.calcPercent = calcPercent;\n}\n\n"],"names":["setIngredientObjs","val","Array","isArray","restoreCraftIngredientPrototypes","window","ingredientObjs","globalQty","_mainBuyPrice","_mainSellPrice","_mainRecipeOutputCount","CraftIngredient","constructor","id","name","icon","rarity","count","buy_price","sell_price","is_craftable","recipe","children","_parentId","this","_uid","nextUid","mode","modeForParentCrafted","expanded","_parent","countTotal","crafted_price","total_buy","total_sell","total_crafted","findRoot","current","setMode","newMode","includes","recalc","safeRenderTable","parent","isRoot","isMysticCloverSpecial","length","manualCounts","forEach","child","idx","reduce","s","c","sum","ing","output_item_count","getBestPrice","nodes","node","Object","setPrototypeOf","prototype","setGlobalQty","snapshotExpandState","ings","map","restoreExpandState","snapshot","i","costsWorker","lastTotals","totalBuy","totalSell","totalCrafted","recalcAll","Promise","resolve","workerUrl","COSTS_WORKER_HASH","__APP_VERSION__","URL","url","Worker","type","reject","handleMessage","e","removeEventListener","handleError","updatedTree","totals","data","apply","src","dest","assign","err","addEventListener","postMessage","ingredientTree","getTotals","findIngredientByIdAndParent","parentId","String","found","findIngredientByPath","pathArr","find","n","findIngredientByUid","uid","findIngredientById","findIngredientsById","acc","push","activeControllers","Set","trackController","controller","add","cancelItemRequests","abort","clear","ingredientTreeWorker","terminate","async","fetchItemData","AbortController","cacheKey","cached","getCached","requestHeaders","etag","lastModified","backendRes","fetchWithCache","headers","signal","ok","arr","json","entry","item","nested_recipe","get","ttl","undefined","lastUpdated","Date","toISOString","setCached","r","status","value","Error","delete","prepareIngredientTreeData","mainItemId","mainRecipeData","ingredients","deserialized","obj","createCraftIngredientFromRecipe","root","event","tree","error","console","message","msg","StorageUtils","showToast","alert","serialized","fetchRecipeData","outputItemId","recipeSearch","ids","recipeId","recipeRes","parentUid","ingredient","structuredClone","JSON","parse","stringify","comparativa","comparativaUpdater","comparativaTick","priceMap","preloadPrices","refreshComparativaUpdater","clearInterval","run","setInterval","agregarItemPorId","some","skeleton","document","getElementById","showSkeleton","itemData","recipeData","marketData","ingredientesArbol","hijos","getPrice","hideSkeleton","handleSaveComparativa","nombres","timestamp","now","saveComparativa","loadComparativaFromURL","idsParam","URLSearchParams","location","search","split","parseInt","filter","isNaN","tryLoad","chunk","slice","allSettled","res","reason","setTimeout","calcPercent","sold","available","toFixed"],"mappings":"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"}