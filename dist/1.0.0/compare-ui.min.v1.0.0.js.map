{"version":3,"file":"compare-ui.min.js","sources":["../../src/js/compare-ui.js"],"sourcesContent":["// GW2 Item Tracker v2 - UI Y PRESENTACIÓN (item-ui.js)\nimport {\n  setIngredientObjs,\n  setGlobalQty,\n  snapshotExpandState,\n  restoreExpandState,\n  findIngredientByUid,\n  calcPercent,\n  recalcAll,\n  getTotals\n} from './items-core.js';\nimport {\n  showSkeleton,\n  hideSkeleton,\n  showError,\n  hideError,\n  setQtyInputValue,\n  getQtyInputValue\n} from './ui-helpers.js';\n\nfunction runIdleTasks(tasks) {\n  function runner(deadline) {\n    while (deadline.timeRemaining() > 0 && tasks.length) {\n      const task = tasks.shift();\n      if (typeof task === 'function') task();\n    }\n    if (tasks.length) requestIdleCallback(runner);\n  }\n  requestIdleCallback(runner);\n}\n\n// Functions imported from items-core.js provide shared logic\n\n// --- Helpers para el input de cantidad global (definidos en ui-helpers.js) ---\n\nfunction isEquivalentParentId(a, b) {\n  const nullLikes = [null, undefined, \"null\", \"\"];\n  return (nullLikes.includes(a) && nullLikes.includes(b)) || String(a) === String(b);\n}\n\n// --- Helpers visuales ---\n\n// --- DEPURACIÓN: Verifica que todos los ingredientes y subingredientes tengan id válido ---\nfunction checkTreeForInvalidIds(ings, path = \"\") {\n  if (!Array.isArray(ings)) return;\n  for (const ing of ings) {\n    if (!ing || typeof ing.id === \"undefined\" || ing.id === null) {\n      console.warn(\"Ingrediente sin id válido en ruta:\", path, ing);\n    }\n    if (Array.isArray(ing.children)) {\n      checkTreeForInvalidIds(ing.children, path + \" > \" + (ing.name || ing.id));\n    }\n  }\n}\nwindow.checkTreeForInvalidIds = checkTreeForInvalidIds;\n\n// Llama a esto tras inicializar window.ingredientObjs, antes de renderizar:\n// checkTreeForInvalidIds(window.ingredientObjs);\n\n\n\n\nfunction renderWiki(name) {\n  if (!name) return;\n  const nombre = encodeURIComponent(name.replaceAll(' ', '_'));\n  const wikiES = `https://wiki.guildwars2.com/wiki/es:${nombre}`;\n  const wikiEN = `https://wiki.guildwars2.com/wiki/${nombre}`;\n  const wikiLinksEl = document.getElementById('wiki-links');\n  wikiLinksEl.innerHTML = `\n    <div class=\"wiki-links\">\n      <a href=\"${wikiES}\" target=\"_blank\">Wiki en Español</a>\n      <a href=\"${wikiEN}\" target=\"_blank\">Wiki en Inglés</a>\n    </div>\n  `;\n}\n\n// --- Helpers de UI definidos en ui-helpers.js ---\n\n// Inicializa el mapa de expansión principal por id\nif (typeof window._mainItemExpandedMap === 'undefined') {\n  window._mainItemExpandedMap = {};\n}\n// Handler para el botón de expandir/collapse principal\nif (!window._mainExpandBtnHandlerInstalled) {\n  window._mainExpandBtnHandlerInstalled = true;\n  document.addEventListener('click', function(e) {\n    // Handler para expandir/collapse principal\n    if (e.target && e.target.classList.contains('btn-expand-main')) {\n      const mainId = e.target.getAttribute('data-id');\n      if (!mainId) return;\n      window._mainItemExpandedMap[mainId] = !window._mainItemExpandedMap[mainId];\n      if (typeof safeRenderTable === 'function') safeRenderTable();\n      e.stopPropagation();\n    }\n  });\n  // Handler global SEPARADO para eliminar ítem principal\n  document.addEventListener('click', function(e) {\n    if (e.target && (e.target.classList.contains('btn-delete-main') || (typeof e.target.closest === 'function' && e.target.closest('.btn-delete-main')))) {\n      let deleteBtn = e.target;\n      if (!deleteBtn.classList.contains('btn-delete-main') && typeof deleteBtn.closest === 'function') {\n        deleteBtn = deleteBtn.closest('.btn-delete-main');\n      }\n      if (!deleteBtn) return;\n      const mainId = deleteBtn.getAttribute('data-id');\n      if (!mainId) return;\n      if (window.ingredientObjs && Array.isArray(window.ingredientObjs)) {\n        window.ingredientObjs = window.ingredientObjs.filter(ing => String(ing.id) !== String(mainId));\n        if (window._mainItemExpandedMap) delete window._mainItemExpandedMap[mainId];\n      }\n      if (typeof safeRenderTable === 'function') safeRenderTable();\n      e.stopPropagation();\n    }\n  });\n}\n\n// --- Handler para cambio de modo (buy/sell/crafted) ---\nif (!window._modeChangeHandlerInstalled) {\n  window._modeChangeHandlerInstalled = true;\n  document.addEventListener('click', function(e) {\n    const target = e.target;\n    if (target.matches('.chk-mode-buy, .chk-mode-sell, .chk-mode-crafted')) {\n      const path = target.getAttribute('data-path');\n      if (!path) return;\n\n      const uid = path.split('-').pop();\n      const ingredient = findIngredientByUid(window.ingredientObjs || [], uid);\n\n      if (ingredient) {\n        let newMode = 'buy';\n        if (target.classList.contains('chk-mode-sell')) newMode = 'sell';\n        if (target.classList.contains('chk-mode-crafted')) newMode = 'crafted';\n        // Llamamos al nuevo método si está disponible, sino ajustamos manualmente\n        if (typeof ingredient.setMode === 'function') {\n          // Llamamos al nuevo método que se encarga de todo: recalcular y volver a renderizar\n          ingredient.setMode(newMode);\n        } else {\n          ingredient.modeForParentCrafted = newMode;\n          ingredient.findRoot()?.recalc(window.globalQty || 1, null);\n          if (typeof safeRenderTable === 'function') safeRenderTable();\n        }\n      }\n    }\n  });\n}\n\n// Handler global para expandir/collapse ingredientes hijos\n// DEPURACIÓN: logs antes y después de buscar/cambiar expanded\nif (!window._expandBtnHandlerInstalled) {\n  window._expandBtnHandlerInstalled = true;\n  // Handler único para expand/collapse por data-path está en installUIEvents o más abajo.\n}\n\n\n// Renderiza la fila del item principal (crafteable)\nfunction renderMainItemRow(mainItem, qty, totalBuy, totalSell, totalCrafted) {\n  // Usa SIEMPRE los totales calculados en el nodo raíz tras recalc.\n  // getTotals() entrega los totales globales calculados por recalcAll.\n  // Esto mantiene la misma lógica que en item.js y evita desincronizaciones.\n  const realTotals = {\n    totalBuy: mainItem.total_buy,\n    totalSell: mainItem.total_sell,\n    totalCrafted:\n      (mainItem.total_crafted !== undefined && mainItem.total_crafted !== null)\n        ? mainItem.total_crafted\n        : getTotals().totalCrafted\n  };\n\n  if (!mainItem) return '';\n  const expanded = !!window._mainItemExpandedMap[mainItem.id];\n  const btnExpand = `<button class=\"btn-expand btn-expand-main\" id=\"btn-expand-main-${mainItem.id}\" data-id=\"${mainItem.id}\">${expanded ? '▴' : '▾'}</button>`;\n  const btnDelete = `<button class=\"btn-delete-main\" data-id=\"${mainItem.id}\" title=\"Eliminar\">-</button>`;\n  const btn = `${btnExpand} ${btnDelete}`;\n  const rarityClass = typeof getRarityClass === 'function' ? getRarityClass(mainItem.rarity) : '';\n  return `\n    <tr class=\"row-bg-main\">\n      <td class=\"th-border-left-items\"><img src=\"${mainItem.icon}\" width=\"32\"></td>\n      <td><a href=\"/item?id=${mainItem.id}\" class=\"item-link ${rarityClass}\" target=\"_blank\">${(mainItem.recipe && mainItem.recipe.output_item_count && mainItem.recipe.output_item_count > 1) ? `<span style='color:#a1a1aa;font-size:0.95em;display:block;margin-bottom:2px;'>Receta produce <b>${mainItem.recipe.output_item_count}</b> unidades<br>Profit mostrado es por unidad</span>` : ''}${mainItem.name}</a></td>\n      <td>${qty}</td>\n      <td class=\"item-unit-sell\">${formatGoldColored(Number(mainItem.sell_price))} <span style=\"color: #c99b5b\">c/u</span></td>\n      <td class=\"item-solo-buy\"><div>${formatGoldColored(realTotals.totalBuy)}</div></td>\n      <td class=\"item-solo-sell\"><div>${formatGoldColored(realTotals.totalSell)}</div></td>\n      <td class=\"item-solo-crafted\"><div>${formatGoldColored(realTotals.totalCrafted)}</div></td>\n      <td class=\"item-profit\">${(() => {\n        const ventaBruta = Number(mainItem.sell_price) * qty;\n        const ventaNeta = ventaBruta - (ventaBruta * 0.15);\n        const minTotal = Math.min(realTotals.totalBuy, realTotals.totalSell, realTotals.totalCrafted);\n        const profit = ventaNeta - minTotal;\n        const color = profit > 0 ? '#4fc178' : '#e84d4d';\n        return `<span style='font-weight:bold;color:${color}'>${formatGoldColored(profit)}</span>`;\n      })()}</td>\n      <td class=\"th-border-right-items\"><div style=\"display:flex;gap:6px;align-items:center;\">${btn}</div></td>\n    </tr>\n  `;\n\n}\n\n// --- Renderizado recursivo de ingredientes ---\nfunction renderRows(ings, nivel = 0, parentUid = null, rowGroupIndex = 0, parentExpanded = true, path = []) {\n  if (!ings || !Array.isArray(ings)) return '';\n\n  return ings.map((ing, idx) => {\n    if (!ing || typeof ing.id === 'undefined') {\n      console.warn('Ingrediente inválido en renderRows:', ing);\n      return '';\n    }\n    \n    const groupIdx = nivel === 0 ? idx : rowGroupIndex;\n    const rowBgClass = groupIdx % 2 === 0 ? 'row-bg-a' : 'row-bg-b';\n    const indent = nivel > 0 ? `style=\"padding-left:${nivel * 30}px\"` : '';\n    const rarityClass = typeof getRarityClass === 'function' ? getRarityClass(ing.rarity) : '';\n    const currentPath = [...path, ing._uid].join('-');\n    const expandButton = (ing.children && ing.children.length)\n      ? `<button class=\"btn-expand\" data-path=\"${currentPath}\">${ing.expanded ? '▴' : '▾'}</button>` : '';\n    \n    const isChild = nivel > 0;\n    const extraStyle = isChild && !parentExpanded ? 'style=\"display:none\"' : '';\n    \n    const radioName = `mode-${currentPath}`;\n    const radios = isChild ? `\n      <input type=\"radio\" name=\"${radioName}\" class=\"chk-mode-buy\" data-path=\"${currentPath}\" ${ing.modeForParentCrafted === 'buy' ? 'checked' : ''} title=\"Usar precio de compra para el padre\">\n    ` : '';\n    const radiosSell = isChild ? `\n      <input type=\"radio\" name=\"${radioName}\" class=\"chk-mode-sell\" data-path=\"${currentPath}\" ${ing.modeForParentCrafted === 'sell' ? 'checked' : ''} title=\"Usar precio de venta para el padre\">\n    ` : '';\n    const radiosCrafted = (isChild && ing.is_craftable && ing.children && ing.children.length > 0) ? `\n      <input type=\"radio\" name=\"${radioName}\" class=\"chk-mode-crafted\" data-path=\"${currentPath}\" ${ing.modeForParentCrafted === 'crafted' ? 'checked' : ''} title=\"Usar precio de crafteo para el padre\">\n    ` : '';\n\n    // El total de profit solo tiene sentido para el nodo raíz\n    const profitHtml = (() => {\n        // Mostrar profit SOLO si el ingrediente es padre (tiene hijos) y tiene precio de mercado\n        if (!(ing.children && ing.children.length > 0 && Number(ing.sell_price) > 0)) {\n          return '';\n        }\n        const ventaBruta = Number(ing.sell_price) * ing.countTotal;\n        const ventaNeta = ventaBruta - (ventaBruta * 0.15);\n        const minTotal = Math.min(ing.total_buy, ing.total_sell, ing.total_crafted);\n        const profit = ventaNeta - minTotal;\n        const color = profit > 0 ? '#4fc178' : '#e84d4d';\n        return `<span style='font-weight:bold;color:${color}'>${formatGoldColored(profit)}</span>`;\n    })();\n\n    const noMarketPrice = (!ing.buy_price && !ing.sell_price);\n    const noCraftedMarketPrice = ing.is_craftable && ing.children && ing.children.length > 0;\n\n    return `\n      <tr data-path=\"${currentPath}\" class=\"${isChild ? `subrow subrow-${nivel} child-of-${parentUid}` : ''} ${rowBgClass}\" ${extraStyle}>\n        <td class=\"th-border-left-items\" ${indent}><img src=\"${ing.icon}\" width=\"32\"></td>\n        <td><a href=\"/item?id=${ing.id}\" class=\"item-link ${rarityClass}\" target=\"_blank\">${ing.name}</a></td>\n        <td>${(ing.countTotal != null) ? (Number.isInteger(ing.countTotal) ? ing.countTotal : ing.countTotal.toFixed(2)) : ing.count}</td>\n        <td class=\"item-unit-sell\">${formatGoldColored(ing.sell_price)} <span style=\"color: #c99b5b\">c/u</span></td>\n        \n        <td class=\"item-solo-buy\">\n          <div>${formatGoldColored(ing.total_buy)}</div>\n          <div class=\"item-solo-precio\">${formatGoldColored(ing.buy_price)} <span style=\"color: #c99b5b\">c/u</span></div>\n          ${radios}\n        </td>\n        \n        <td class=\"item-solo-sell\">\n          <div>${formatGoldColored(ing.total_sell)}</div>\n          <div class=\"item-solo-precio\">${formatGoldColored(ing.sell_price)} <span style=\"color: #c99b5b\">c/u</span></div>\n          ${radiosSell}\n        </td>\n        \n        <td class=\"item-solo-crafted\">\n          ${(ing.is_craftable && ing.children && ing.children.length > 0 && ing.total_crafted !== null) ? `\n            <div>${formatGoldColored(ing.total_crafted)}</div>\n            <div class=\"item-solo-precio\">${formatGoldColored(0)} <span style=\"color: #c99b5b\">c/u</span></div>\n            ${radiosCrafted}` : ''\n          }\n        </td>\n        \n        <td class=\"item-profit\">${profitHtml}</td>\n        \n        <td class=\"th-border-right-items\">${expandButton}</td>\n      </tr>\n      ${(ing.children && ing.children.length && parentExpanded && ing.expanded) ? renderRows(ing.children, nivel + 1, ing._uid, groupIdx, ing.expanded, [...path, ing._uid]) : ''}\n    `;\n  }).join('');\n}\n\n// --- Asegura que todos los ingredientes inicien colapsados ---\nfunction setAllExpandedFalse(ings) {\n  for (const ing of ings) {\n    ing.expanded = false;\n    if (Array.isArray(ing.children)) setAllExpandedFalse(ing.children);\n  }\n}\n\n// --- Asigna _parentId de forma robusta a todo el árbol ---\nfunction asignarParentIds(nodos, parentUid = \"\") {\n  nodos.forEach(ing => {\n    ing._parentId = parentUid !== null ? String(parentUid) : \"\";\n    if (Array.isArray(ing.children)) {\n      asignarParentIds(ing.children, ing._uid);\n    }\n  });\n}\nif (window.ingredientObjs) asignarParentIds(window.ingredientObjs);\n\n// --- Comparación robusta de parentId ---\n\n// --- Función para mostrar/ocultar el input de cantidad global ---\nfunction updateQtyInputVisibility(show) {\n  const qtyContainer = document.querySelector('.qty-global-container');\n  if (qtyContainer) {\n    if (show) {\n      qtyContainer.classList.add('visible');\n    } else {\n      qtyContainer.classList.remove('visible');\n    }\n  }\n}\n\n// --- Renderizado de la sección 7: Ingredientes para craftear ---\nfunction renderCraftingSectionUI(totals, buyPrice = window._mainBuyPrice, sellPrice = window._mainSellPrice) {\n  if (buyPrice == null) buyPrice = window._mainBuyPrice;\n  if (sellPrice == null) sellPrice = window._mainSellPrice;\n  if (typeof window._mainItemExpanded === 'undefined') window._mainItemExpanded = false;\n\n  // Mostrar/ocultar el input de cantidad global según si hay ingredientes\n  const hasIngredients = window.ingredientObjs && window.ingredientObjs.length > 0;\n  updateQtyInputVisibility(hasIngredients);\n  // --- DEBUG: Mostrar todos los valores clave ---\n\n  // Obtener output_item_count de la receta principal\n  const outputCount = (window._mainRecipeOutputCount && !isNaN(window._mainRecipeOutputCount)) ? window._mainRecipeOutputCount : 1;\n  const qtyValue = (typeof getQtyInputValue() !== 'undefined' ? getQtyInputValue() : window.globalQty);\n  const precioCompraTotal = (buyPrice != null) ? buyPrice * window.globalQty : 0;\n  // Suma el sell_price de todos los ítems raíz\n  const totalSellPrice = window.ingredientObjs.reduce((sum, ing) => sum + (Number(ing.sell_price) || 0), 0);\n  const precioVentaTotal = totalSellPrice * window.globalQty;\n  const precioCraftingMinTotal = Math.min(totals.totalBuy, totals.totalSell, totals.totalCrafted);\n  const precioCraftingMinUnidad = outputCount > 0 ? precioCraftingMinTotal / outputCount : precioCraftingMinTotal;\n  const precioCompraUnidad = outputCount > 0 ? precioCompraTotal / outputCount : precioCompraTotal;\n  const precioVentaUnidad = outputCount > 0 ? (totalSellPrice / outputCount) : totalSellPrice;\n  const preciosFinales = [precioCompraTotal, precioVentaTotal, precioCraftingMinTotal];\n  const precioMinimoFinal = Math.min(...preciosFinales.filter(x => x > 0));\n  const preciosFinalesUnidad = [precioCompraUnidad, precioVentaUnidad, precioCraftingMinUnidad];\n  const precioMinimoFinalUnidad = Math.min(...preciosFinalesUnidad.filter(x => x > 0));\n  let mensaje = '';\n  if (precioMinimoFinal === precioCompraTotal) mensaje = 'Mejor comprar (Buy)';\n  else if (precioMinimoFinal === precioVentaTotal) mensaje = 'Mejor vender (Sell)';\n  else mensaje = 'Mejor craftear (Crafted)';\n\n  // Profit\n  let profitHtml = '';\n  let profitHtmlUnidad = '';\n  // --- Lógica y estructura idéntica a item-ui.js ---\n  // Variables para profit total (outputCount === 1)\n  const ventaTrasComisionTotal = precioVentaTotal - (precioVentaTotal * 0.15);\n  const profitBuyTotal = ventaTrasComisionTotal - totals.totalBuy;\n  const profitSellTotal = ventaTrasComisionTotal - totals.totalSell;\n  const profitCraftedTotal = ventaTrasComisionTotal - totals.totalCrafted;\n  // Variables para profit por unidad (outputCount > 1)\n  const precioVentaUnidadMercado = (sellPrice != null) ? sellPrice : 0;\n  const ventaTrasComisionUnidadMercado = precioVentaUnidadMercado - (precioVentaUnidadMercado * 0.15);\n  const profitBuyUnidadMercado = ventaTrasComisionUnidadMercado - (totals.totalBuy / outputCount);\n  const profitSellUnidadMercado = ventaTrasComisionUnidadMercado - (totals.totalSell / outputCount);\n  const profitCraftedUnidadMercado = ventaTrasComisionUnidadMercado - (totals.totalCrafted / outputCount);\n\n  if (outputCount === 1) {\n    profitHtml = '';\n  }\n  if (outputCount > 1) {\n    profitHtmlUnidad = '';\n  }\n\n  // Tablas de totales\n  let tablaTotales = `<div class=\"table-modern-totales\">\n    <h3>Precio total materiales - Crafting</h3>\n    <div id=\"totales-crafting\">      \n      <table class=\"table-totales\" style=\"margin-top:12px;\">\n        <tr>\n          <th><div class=\"tooltip-modern\">Total Compra\n            <span class=\"tooltiptext-modern\">Suma total si haces PEDIDO de materiales en el mercado.</span>\n          </div></th>\n          <td class=\"item-solo-buy\">${formatGoldColored(totals.totalBuy)}</td>\n          <th><div class=\"tooltip-modern\">Total Venta\n            <span class=\"tooltiptext-modern\">Suma total si COMPRAS materiales en el mercado.</span>\n          </div></th>\n          <td class=\"item-solo-sell\">${formatGoldColored(totals.totalSell)}</td>\n          <th><div class=\"tooltip-modern\">Total Crafted\n            <span class=\"tooltiptext-modern\">Suma total si CRAFTEAS todos los materiales posibles desde cero.</span>\n          </div></th>\n          <td class=\"item-solo-crafted\">${formatGoldColored(totals.totalCrafted)}</td>\n        </tr>\n      </table>\n    </div>\n    </div>`;\n  let tablaTotalesUnidad = '';\n  if (outputCount > 1) {\n    tablaTotalesUnidad = `<div class=\"table-modern-totales\">\n    <div style='margin-bottom:8px;color:#a1a1aa;font-size:1em;'>Esta receta produce <b>${outputCount}</b> unidades por crafteo. Los siguientes costos son por unidad.</div>\n      <div id=\"totales-crafting\">\n        <table class=\"table-totales\" style=\"margin-top:12px;\">\n          <tr>\n            <th><div class=\"tooltip-modern\">Total Compra\n              <span class=\"tooltiptext-modern\">Suma total si haces PEDIDO de materiales en el mercado.</span>\n            </div></th>\n            <td class=\"item-solo-buy\">${formatGoldColored(totals.totalBuy / outputCount)}</td>\n            <th><div class=\"tooltip-modern\">Total Venta\n              <span class=\"tooltiptext-modern\">Suma total si COMPRAS materiales en el mercado.</span>\n            </div></th>\n            <td class=\"item-solo-sell\">${formatGoldColored(totals.totalSell / outputCount)}</td>\n            <th><div class=\"tooltip-modern\">Total Crafted\n              <span class=\"tooltiptext-modern\">Suma total si CRAFTEAS todos los materiales posibles desde cero.</span>\n            </div></th>\n              <td class=\"item-solo-crafted\">${formatGoldColored(totals.totalCrafted / outputCount)}</td>\n          </tr>\n        </table>\n      </div>\n    </div>`;\n  }\n\n  let tablaComparativa = '';\n  let tablaComparativaUnidad = '';\n  if (outputCount === 1) {\n    tablaComparativa = `<section id='comparativa-section'>\n      <div class=\"table-modern-totales\"><br>\n        <h3>Comparativa de precios de Bazar vs Crafting</h3>\n        <table class='table-totales totales-crafting-comparativa'>\n          <tr style='text-align:center;'>\n            <td><div style='${precioMinimoFinal===precioCompraTotal ? 'background:#e84d4d33;font-weight:bold;border-radius:6px;padding:10px;' : ''}'>${formatGoldColored(precioCompraTotal)} <br><span style='font-size:0.93em;'>Precio compra</span></div></td>\n            <td><div style='${precioMinimoFinal===precioVentaTotal ? 'background:#4db1e833;font-weight:bold;border-radius:6px;padding:10px;' : ''}'>${formatGoldColored(precioVentaTotal)} <br><span style='font-size:0.93em;'>Precio venta</span></div></td>\n            <td><div style='${precioMinimoFinal===precioCraftingMinTotal ? 'background:#4fc17833;font-weight:bold;border-radius:6px;padding:10px;' : ''}'>${formatGoldColored(precioCraftingMinTotal)} <br><span style='font-size:0.93em;'>Precio crafting más bajo</span></div></td>\n          </tr>\n          <tr><td colspan='3' style='text-align:center;font-size:1.07em;'>${mensaje}</td></tr>\n        </table>\n      </div>\n      </section>`;\n  }\n  if (outputCount > 1) {\n    const precioCompraUnidadMercado = (buyPrice != null) ? buyPrice : 0;\n    const precioVentaUnidadMercado = (sellPrice != null) ? sellPrice : 0;\n    const precioCraftingMinUnidadReal = outputCount > 0 ? precioCraftingMinTotal / outputCount : precioCraftingMinTotal;\n    const preciosUnidadCorr = [precioCompraUnidadMercado, precioVentaUnidadMercado, precioCraftingMinUnidadReal];\n    const precioMinimoUnidadReal = Math.min(...preciosUnidadCorr.filter(x => x > 0));\n    const minIdxUnidad = preciosUnidadCorr.indexOf(precioMinimoUnidadReal);\n    tablaComparativaUnidad = `<section id='comparativa-section-unidad'>\n      <div class=\"table-modern-totales\"><br>\n        <h3>Comparativa de precios de Bazar vs Crafting por UNIDAD</h3>\n        <div style='margin-bottom:8px;color:#a1a1aa;font-size:1em;'>Esta receta produce <b>${outputCount}</b> unidades por crafteo. Los siguientes precios son por unidad.</div>\n        <table class='table-totales totales-crafting-comparativa'>\n          <tr style='text-align:center;'>\n            <td><div style='${minIdxUnidad===0 ? 'background:#e84d4d33;font-weight:bold;border-radius:6px;padding:10px;' : ''}'>${formatGoldColored(precioCompraUnidadMercado)} <br><span style='font-size:0.93em;'>Precio compra</span></div></td>\n            <td><div style='${minIdxUnidad===1 ? 'background:#4db1e833;font-weight:bold;border-radius:6px;padding:10px;' : ''}'>${formatGoldColored(precioVentaUnidadMercado)} <br><span style='font-size:0.93em;'>Precio venta</span></div></td>\n            <td><div style='${minIdxUnidad===2 ? 'background:#4fc17833;font-weight:bold;border-radius:6px;padding:10px;' : ''}'>${formatGoldColored(precioCraftingMinUnidadReal)} <br><span style='font-size:0.93em;'>Precio crafting más bajo</span></div></td>\n          </tr>\n          <tr><td colspan='3' style='text-align:center;font-size:1.07em;'>${mensaje}</td></tr>\n        </table>\n      </div>\n      </section>`;\n  }\n\n  const html = `\n    <h3>Comparativa de items</h3>\n\n    <table class=\"table-modern tabla-tarjetas\">\n      <thead class=\"header-items table-comparison-row\">\n        <tr>\n          <th class=\"th-border-left\">Ícono</th>\n          <th>Nombre</th>\n          <th>Cantidad</th>\n          <th>Precio de venta</th>\n          <th>Total Compra</th>\n          <th>Total Venta</th>\n          <th>Total Crafted</th>\n          <th>Mejor Profit</th>\n          <th class=\"th-border-right\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        ${window.ingredientObjs.map(ing => `\n          ${renderMainItemRow(ing, window.globalQty, ing.total_buy, ing.total_sell, ing.total_crafted)}\n          ${window._mainItemExpandedMap[ing.id] ? renderRows(ing.children, 1, ing._uid, 0, true, [ing._uid]) : ''}\n`).join('')}\n      </tbody>\n    </table>\n    <!-- ${outputCount > 1 ? tablaTotalesUnidad : tablaTotales} -->\n    <!-- Comparativa de precios oculta -->\n    ${profitHtml}\n  `;\n\n  return html;\n}\n\n// --- Renderizado principal refactorizado ---\nasync function renderItemUI(itemData, marketData) {\n  // --- SNAPSHOT DEL ESTADO EXPANDIDO ---\n  const expandSnapshot = snapshotExpandState(window.ingredientObjs);\n  const itemHeader = document.getElementById('item-header');\n  if (itemHeader) {\n    itemHeader.style.display = 'none';\n    // Si necesitas limpiar el contenido, puedes usar:\n    // itemHeader.innerHTML = '';\n  }\n  // El resto del renderizado continúa normalmente, pero no redeclares la variable.\n\n  // Si necesitas renderizar este header dinámico, usa una variable y asígnalo a innerHTML donde corresponda:\n  /*\n  const headerHtml = `\n    <table class=\"table-modern tabla-tarjetas\" style=\"margin-bottom:0;\"><p>TABLA DINAMICA</p>\n      <tbody>\n        <tr class=\"row-bg-a\">\n          <td class=\"th-border-left-items\" style=\"width:48px\"><img src=\"${itemData.icon}\" width=\"40\" height=\"40\" style=\"vertical-align:middle;object-fit:contain;border-radius:6px;background:#181c24;box-shadow:0 1px 4px #0008;\"></td>\n          <td>\n            <div style=\"font-size:1.18em;font-weight:600;\">${itemData.name}</div>\n            <div style=\"color:#a1a1aa;font-size:1.05rem;\">ID: ${itemData.id} &nbsp;|&nbsp; ${itemData.type}${itemData.rarity ? ' - ' + itemData.rarity : ''}</div>\n          </td>\n          <td colspan=\"5\" class=\"th-border-right-items\"></td>\n        </tr>\n      </tbody>\n    </table>\n  `;\n  // document.getElementById('item-header').innerHTML = headerHtml;\n  */\n\n\n  // Precios\n  const safeMarketData = marketData || {};\nconst precios = `\n    <!--<table class=\"table-modern\">\n      <tr><th><div class=\"dato-item\">Precio de compra</div></th><td><div class=\"dato-item-info\">${formatGoldColored(safeMarketData.buy_price != null ? safeMarketData.buy_price : 0)}</div></td></tr>\n      <tr><th><div class=\"dato-item\">Precio de venta</div></th><td><div class=\"dato-item-info\">${formatGoldColored(safeMarketData.sell_price != null ? safeMarketData.sell_price : 0)}</div></td></tr>\n       <tr><th><div class=\"dato-item\">Disponibles para comprar</div></th><td><div class=\"dato-item-info\">${safeMarketData.buy_quantity != null ? safeMarketData.buy_quantity : '-'}</div></td></tr> \n       <tr><th><div class=\"dato-item\">Disponibles para vender</div></th><td><div class=\"dato-item-info\">${safeMarketData.sell_quantity != null ? safeMarketData.sell_quantity : '-'}</div></td></tr> \n    </table>-->\n  `;\n  // Eliminado: seccion-precios, seccion-totales y seccion-comparativa (ya no existen en el HTML)\n\n  // --- RESTAURAR ESTADO EXPANDIDO ANTES DE RENDERIZAR ---\n  restoreExpandState(window.ingredientObjs, expandSnapshot);\n\n  // Crafting\n  await safeRenderTable(marketData?.buy_price, marketData?.sell_price);\n\n  installUIEvents();\n}\n\n// --- Instalación de eventos y render seguro ---\nfunction installUIEvents() {\n  // Listener para radios de modo en subingredientes\n  // (Ya implementado abajo en el handler global de radios)\n}\n\n// Handler global para expandir/collapse ingredientes hijos por data-path\ndocument.addEventListener('click', function(e) {\n  if (e.target && e.target.classList.contains('btn-expand')) {\n    const pathStr = e.target.getAttribute('data-path');\n    if (!pathStr) return;\n    const uid = pathStr.split('-').pop();\n    const ing = findIngredientByUid(window.ingredientObjs || [], uid);\n    if (ing) {\n      ing.expanded = !ing.expanded;\n      if (typeof safeRenderTable === 'function') safeRenderTable();\n    }\n  }\n});\n\n// Handler radios buy/sell/crafted\n\n  // Handler input cantidad global\n  if (!window._qtyGlobalHandlerInstalled) {\n    window._qtyGlobalHandlerInstalled = true;\n    // INPUT: permite escribir varios dígitos, no fuerza recalculo salvo que sea válido\n    document.addEventListener('input', function(e) {\n      if (e.target && e.target.id === 'qty-global') {\n        window._qtyInputValue = e.target.value;\n        // NO recalcula, NO renderiza, NO actualiza globalQty aquí\n      }\n    });\n    // BLUR: si el valor es inválido, lo pone en 1\n    document.addEventListener('blur', function(e) {\n      if (e.target && e.target.id === 'qty-global') {\n        const input = e.target;\n        let val = parseInt(input.value, 10);\n        if (isNaN(val) || val < 1) {\n          setGlobalQty(1);\n          window._qtyInputValue = '1';\n        } else {\n          setGlobalQty(val);\n          window._qtyInputValue = input.value;\n        }\n        if (typeof window._qtyInputValue !== 'undefined' && String(window._qtyInputValue) === String(window.globalQty)) {\n          delete window._qtyInputValue;\n        }\n        safeRenderTable();\n      }\n    }, true);\n    // ENTER: igual que blur\n    document.addEventListener('keydown', function(e) {\n      if (e.target && e.target.id === 'qty-global' && (e.key === 'Enter')) {\n        e.preventDefault();\n        const input = e.target;\n        let val = parseInt(input.value, 10);\n        if (isNaN(val) || val < 1) {\n          setGlobalQty(1);\n          window._qtyInputValue = '1';\n        } else {\n          setGlobalQty(val);\n          window._qtyInputValue = input.value;\n        }\n        if (typeof window._qtyInputValue !== 'undefined' && String(window._qtyInputValue) === String(window.globalQty)) {\n          delete window._qtyInputValue;\n        }\n        safeRenderTable();\n      }\n    });\n  }\n\n// --- Inicialización principal ---\nexport async function initItemUI(itemData, marketData) {\n  window._lastItemData = itemData;\n  window._lastMarketData = marketData;\n  const skeleton = document.getElementById('item-skeleton');\n  hideSkeleton(skeleton);\n  hideError();\n  await renderItemUI(itemData, marketData);\n}\n\n  \n\n// --- Inicialización de eventos y render seguro ---\n\nexport { renderItemUI, safeRenderTable };\n\nasync function safeRenderTable(buyPrice = window._mainBuyPrice, sellPrice = window._mainSellPrice) {\n  if (buyPrice == null) buyPrice = window._mainBuyPrice;\n  if (sellPrice == null) sellPrice = window._mainSellPrice;\n  await recalcAll(window.ingredientObjs, window.globalQty);\n  // getTotals() devuelve los totales globales calculados por recalcAll.\n  const totals = getTotals();\n  const seccion = document.getElementById('seccion-crafting');\n  if (seccion) {\n    const html = renderCraftingSectionUI(totals, buyPrice, sellPrice);\n    runIdleTasks([\n      () => { seccion.innerHTML = html; },\n      () => setQtyInputValue(window.globalQty)\n    ]);\n  } else {\n    setQtyInputValue(window.globalQty);\n  }\n}\n\nif (typeof window !== 'undefined') {\nwindow.showSkeleton = showSkeleton;\nwindow.hideSkeleton = hideSkeleton;\n  window.showError = showError;\n  window.hideError = hideError;\n  window.safeRenderTable = safeRenderTable;\n  window.renderItemUI = renderItemUI;\n  window.installUIEvents = installUIEvents;\n}\n  // Aquí debe ir la lógica para re-renderizar la tabla de ingredientes y restaurar estados visuales\n  // (Implementar usando los helpers y renderRows, etc. según se necesite)\n\n\n// --- Inicialización principal ---\n"],"names":["renderRows","ings","nivel","parentUid","rowGroupIndex","parentExpanded","path","Array","isArray","map","ing","idx","id","console","warn","groupIdx","rowBgClass","indent","rarityClass","getRarityClass","rarity","currentPath","_uid","join","expandButton","children","length","expanded","isChild","extraStyle","radioName","radios","modeForParentCrafted","radiosSell","radiosCrafted","is_craftable","profitHtml","Number","sell_price","ventaBruta","countTotal","profit","Math","min","total_buy","total_sell","total_crafted","formatGoldColored","buy_price","icon","name","isInteger","toFixed","count","renderCraftingSectionUI","totals","buyPrice","window","_mainBuyPrice","sellPrice","_mainSellPrice","_mainItemExpanded","show","qtyContainer","document","querySelector","classList","add","remove","updateQtyInputVisibility","ingredientObjs","outputCount","_mainRecipeOutputCount","isNaN","getQtyInputValue","globalQty","precioCompraTotal","precioVentaTotal","reduce","sum","precioCraftingMinTotal","totalBuy","totalSell","totalCrafted","preciosFinales","precioMinimoFinal","filter","x","mensaje","tablaTotales","tablaTotalesUnidad","precioCompraUnidadMercado","precioVentaUnidadMercado","precioCraftingMinUnidadReal","preciosUnidadCorr","precioMinimoUnidadReal","indexOf","mainItem","qty","realTotals","undefined","getTotals","_mainItemExpandedMap","btn","recipe","output_item_count","renderMainItemRow","async","renderItemUI","itemData","marketData","expandSnapshot","snapshotExpandState","itemHeader","getElementById","style","display","safeMarketData","buy_quantity","sell_quantity","restoreExpandState","safeRenderTable","initItemUI","_lastItemData","_lastMarketData","skeleton","hideSkeleton","hideError","recalcAll","seccion","html","tasks","innerHTML","setQtyInputValue","requestIdleCallback","runner","deadline","timeRemaining","task","shift","checkTreeForInvalidIds","_mainExpandBtnHandlerInstalled","addEventListener","e","target","contains","mainId","getAttribute","stopPropagation","closest","deleteBtn","String","_modeChangeHandlerInstalled","matches","uid","split","pop","ingredient","findIngredientByUid","newMode","setMode","findRoot","recalc","_expandBtnHandlerInstalled","asignarParentIds","nodos","forEach","_parentId","pathStr","_qtyGlobalHandlerInstalled","_qtyInputValue","value","input","val","parseInt","setGlobalQty","key","preventDefault","showSkeleton","showError","installUIEvents"],"mappings":"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"}