{"version":3,"file":"cuenta.min.js","sources":["../../src/js/cuenta.js"],"sourcesContent":["import fetchWithRetry from './utils/fetchWithRetry.js';\n// Asegurarse de que storageUtils esté cargado\nif (typeof window.StorageUtils === 'undefined') {\n    console.error('Error: storageUtils.js no está cargado');\n}\n\nconst skeletonListHTML = `\n    <ul class=\"skeleton-items\">\n        <li class=\"skeleton skeleton-item\"></li>\n        <li class=\"skeleton skeleton-item\"></li>\n        <li class=\"skeleton skeleton-item\"></li>\n    </ul>`;\n\nfunction initAccountSkeleton() {\n    const skeleton = document.getElementById('account-skeleton');\n    const main = document.querySelector('main');\n    if (skeleton) skeleton.style.display = 'block';\n    if (main) main.style.display = 'none';\n}\n\nfunction hideAccountSkeleton() {\n    const skeleton = document.getElementById('account-skeleton');\n    const main = document.querySelector('main');\n    if (skeleton) skeleton.style.display = 'none';\n    if (main) main.style.display = '';\n}\n\ndocument.addEventListener('DOMContentLoaded', async function() {\n    initAccountSkeleton();\n    try {\n        const resp = await fetchWithRetry('backend/api/user.php');\n        if (!resp.ok) {\n            window.location.href = '/login';\n            return;\n        }\n        const user = await resp.json();\n\n        // Actualizar el saludo con el nombre del usuario\n        const greetingElement = document.querySelector('.videos-board-topic');\n        if (greetingElement) {\n            greetingElement.textContent = `Hola ${user.name || 'Usuario'}`;\n        }\n\n        // Mostrar el avatar del usuario en la ilustración de bienvenida\n        const welcomeImg = document.querySelector('.welcome-illustration img');\n        if (welcomeImg && user.avatar) {\n            welcomeImg.src = user.avatar;\n            welcomeImg.alt = `Avatar de ${user.name || 'usuario'}`;\n        }\n\n        // Registrar eventos de refresco\n        const refreshBtn = document.getElementById('refreshFavoritos');\n        if (refreshBtn) {\n            refreshBtn.addEventListener('click', function() {\n                const container = document.getElementById('favoritos-items-container');\n                if (container) {\n                    container.innerHTML = skeletonListHTML;\n                    setTimeout(loadAndDisplayFavoritos, 300);\n                }\n            });\n        }\n\n        const refreshCompBtn = document.getElementById('refreshComparativas');\n        if (refreshCompBtn) {\n            refreshCompBtn.addEventListener('click', function() {\n                const cont = document.getElementById('lista-comparaciones');\n                if (cont) {\n                    cont.innerHTML = skeletonListHTML;\n                    setTimeout(loadAndDisplayComparativas, 300);\n                }\n            });\n        }\n\n        // Cargar y mostrar los ítems y comparativas guardadas\n        await Promise.all([loadAndDisplayFavoritos(), loadAndDisplayComparativas()]);\n\n        // Inicializar estadísticas al cargar\n        await updateStats();\n    } catch (err) {\n        console.error('Error al cargar la cuenta:', err);\n        const main = document.querySelector('main');\n        if (main) {\n            main.innerHTML = `\n                <div class=\"api-error\">\n                    <p>Ocurrió un problema al cargar tu cuenta. Intenta de nuevo más tarde.</p>\n                </div>`;\n        }\n    } finally {\n        hideAccountSkeleton();\n    }\n});\n\n/**\n * Actualiza los contadores de la sección de estadísticas (favoritos y comparaciones)\n */\nasync function updateStats() {\n    const favs  = await window.StorageUtils?.getFavoritos() ?? [];\n    const comps = await window.StorageUtils?.getComparativas() ?? [];\n\n    const favSpan = document.getElementById('favoritosCount');\n    if (favSpan) favSpan.textContent = favs.length;\n\n    const compSpan = document.getElementById('comparacionesCount');\n    if (compSpan) compSpan.textContent = comps.length;\n}\n\n\n/**\n * Carga y muestra los ítems guardados en la lista de favoritos\n */\nasync function loadAndDisplayFavoritos() {\n    const container = document.getElementById('favoritos-items-container');\n    if (!container) {\n        console.error('No se encontró el contenedor de favoritos');\n        return;\n    }\n    \n    // Obtener los ítems guardados usando storageUtils\n    const favoritos = await window.StorageUtils?.getFavoritos() ?? [];\n    \n    if (!favoritos.length) {\n        container.innerHTML = `\n            <div class=\"no-items\">\n                <span class=\"empty-icon\" aria-hidden=\"true\">📦</span>\n                <p>No hay ítems guardados aún.</p>\n                <p>Guarda ítems desde la página de detalles para verlos aquí.</p>\n            </div>`;\n        return;\n    }\n    \n    // Crear lista de ítems\n    const list = document.createElement('ul');\n    list.className = 'favoritos-list';\n    \n    favoritos.forEach((item, index) => {\n        const listItem = document.createElement('li');\n        listItem.className = 'favorito-item';\n        listItem.dataset.id = item.id;\n        \n        // Ícono real del ítem\n        const icon = document.createElement('img');\n        icon.className = 'favorito-icon';\n        icon.src = 'img/sphere_5528251.svg'; // usa un placeholder local\n        icon.alt = 'icono';\n        icon.width = 24;\n        icon.height = 24;\n        \n        // Enlace al ítem (nombre se actualizará tras fetch)\n        const link = document.createElement('a');\n        link.href = `/item?id=${item.id}`;\n        link.className = 'favorito-link';\n        if (item.nombre) {\n            link.textContent = item.nombre;\n        } else {\n            link.innerHTML = '<div class=\"skeleton skeleton-block\"></div>';\n        }\n\n        // Fetch para obtener nombre e icono reales si faltan\n        fetchWithRetry(`https://api.guildwars2.com/v2/items/${item.id}?lang=es`)\n            .then(r => r.ok ? r.json() : null)\n            .then(data => {\n                if (!data) return;\n                if (data.icon) icon.src = data.icon;\n                if (data.name) {\n                    link.textContent = data.name;\n                }\n            })\n            .catch(err => console.error('Error fetching item detalles:', err));\n        \n        // ID del ítem\n        const itemId = document.createElement('span');\n        itemId.className = 'favorito-id';\n        itemId.textContent = `#${item.id}`;\n        \n        // Botón para eliminar\n        const deleteBtn = document.createElement('button');\n        deleteBtn.className = 'delete-favorito';\n        deleteBtn.title = 'Eliminar de favoritos';\n        deleteBtn.innerHTML = '&times;';\n        deleteBtn.onclick = async (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            \n            if (confirm(`¿Eliminar \"${item.nombre || 'este ítem'}\" de favoritos?`)) {\n                if (window.StorageUtils && window.StorageUtils.removeFavorito) {\n                    await window.StorageUtils.removeFavorito(item.id);\n                }\n                listItem.remove();\n                \n                // Mostrar mensaje si no quedan más ítems\n                if (document.querySelectorAll('.favorito-item').length === 0) {\n                    container.innerHTML = `\n                        <div class=\"no-items\">\n                            <span class=\"empty-icon\" aria-hidden=\"true\">📦</span>\n                            <p>No hay ítems guardados.</p>\n                        </div>`;\n                }\n                \n                // Mostrar notificación\n                window.StorageUtils?.showToast('Ítem eliminado de favoritos');\n\n                // Actualizar estadísticas después de eliminar\n                updateStats();\n            }\n        };\n        \n        // Construir la estructura del ítem\n        const itemContent = document.createElement('div');\n        itemContent.className = 'favorito-content';\n        itemContent.appendChild(icon);\n        itemContent.appendChild(link);\n        itemContent.appendChild(itemId);\n        \n        listItem.appendChild(itemContent);\n        listItem.appendChild(deleteBtn);\n        list.appendChild(listItem);\n    });\n    \n    // Limpiar contenedor y agregar la lista\n    container.innerHTML = '';\n    container.appendChild(list);\n    \n    // Añadir contador de ítems\n    const counter = document.createElement('div');\n    counter.className = 'favoritos-counter';\n    counter.textContent = `${favoritos.length} ${favoritos.length === 1 ? 'ítem' : 'ítems'} guardados`;\n    container.prepend(counter);\n\n    // Actualizar estadísticas globales\n    updateStats();\n}\n\n// ------------------ COMPARATIVAS ------------------\n/**\n * Carga y muestra las comparativas guardadas\n */\nasync function loadAndDisplayComparativas() {\n    const container = document.getElementById('lista-comparaciones');\n    if (!container) {\n        console.error('No se encontró el contenedor de comparativas');\n        return;\n    }\n\n    const comparativas = await window.StorageUtils?.getComparativas() ?? [];\n\n    if (!comparativas.length) {\n        container.innerHTML = `\n            <div class=\"no-items\">\n                <span class=\"empty-icon\" aria-hidden=\"true\">📦</span>\n                <p>No hay comparativas guardadas.</p>\n                <p>Guarda una comparativa desde la sección de comparativa para verla aquí.</p>\n            </div>`;\n        return;\n    }\n\n    const list = document.createElement('ul');\n    list.className = 'favoritos-list';\n\n    comparativas.forEach((comp, idx) => {\n        const listItem = document.createElement('li');\n        listItem.className = 'favorito-item comparativa-item';\n\n        // Ícono\n        const icon = document.createElement('span');\n        icon.className = 'favorito-icon';\n        icon.innerHTML = '📊';\n\n        const nombre = Array.isArray(comp.nombres) && comp.nombres.length\n            ? comp.nombres.join(' vs ')\n            : `Comparativa ${idx + 1}`;\n        const fecha = '';\n\n        const link = document.createElement('a');\n        link.href = `/compare-craft?ids=${comp.ids.join(',')}`;\n        link.className = 'favorito-link';\n        link.textContent = nombre;\n\n        const meta = document.createElement('span');\n        meta.className = 'favorito-id';\n        const count = comp.ids.length;\n        meta.textContent = `(${count} ${count === 1 ? 'ítem' : 'ítems'})`;\n\n        const deleteBtn = document.createElement('button');\n        deleteBtn.className = 'delete-favorito';\n        deleteBtn.title = 'Eliminar comparativa';\n        deleteBtn.innerHTML = '&times;';\n        deleteBtn.onclick = async (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (confirm('¿Eliminar esta comparativa?')) {\n                if (window.StorageUtils && window.StorageUtils.removeComparativa) {\n                    await window.StorageUtils.removeComparativa(comp.id);\n                }\n                listItem.remove();\n                if (document.querySelectorAll('.comparativa-item').length === 0) {\n                    container.innerHTML = '<p>No hay comparativas guardadas.</p>';\n                }\n                window.StorageUtils?.showToast('Comparativa eliminada');\n\n                // Actualizar estadísticas después de eliminar\n                updateStats();\n            }\n        };\n\n        const itemContent = document.createElement('div');\n        itemContent.className = 'favorito-content';\n        itemContent.appendChild(icon);\n        itemContent.appendChild(link);\n        itemContent.appendChild(meta);\n\n        listItem.appendChild(itemContent);\n        listItem.appendChild(deleteBtn);\n        list.appendChild(listItem);\n    });\n\n    container.innerHTML = '';\n    container.appendChild(list);\n}\n\n"],"names":["window","StorageUtils","console","error","skeletonListHTML","async","updateStats","favs","getFavoritos","comps","getComparativas","favSpan","document","getElementById","textContent","length","compSpan","loadAndDisplayFavoritos","container","favoritos","innerHTML","list","createElement","className","forEach","item","index","listItem","dataset","id","icon","src","alt","width","height","link","href","nombre","fetchWithRetry","then","r","ok","json","data","name","catch","err","itemId","deleteBtn","title","onclick","e","preventDefault","stopPropagation","confirm","removeFavorito","remove","querySelectorAll","showToast","itemContent","appendChild","counter","prepend","loadAndDisplayComparativas","comparativas","comp","idx","Array","isArray","nombres","join","ids","meta","count","removeComparativa","addEventListener","skeleton","main","querySelector","style","display","initAccountSkeleton","resp","location","user","greetingElement","welcomeImg","avatar","refreshBtn","setTimeout","refreshCompBtn","cont","Promise","all","hideAccountSkeleton"],"mappings":"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"}